

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sat Sep 01 17:24:59 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F886
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	strings,global,class=STRING,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    13                           	psect	inittext,global,class=CODE,delta=2
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	maintext,global,class=CODE,split=1,delta=2
    19                           	psect	text1,local,class=CODE,merge=1,delta=2
    20                           	psect	text2,local,class=CODE,merge=1,delta=2
    21                           	psect	text3,local,class=CODE,merge=1,delta=2
    22                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text5,local,class=CODE,merge=1,delta=2
    24                           	psect	intentry,global,class=CODE,delta=2
    25                           	psect	text6,local,class=CODE,merge=1,delta=2
    26                           	psect	text7,local,class=CODE,merge=1,delta=2
    27                           	psect	text8,local,class=CODE,merge=1,delta=2
    28                           	psect	text9,local,class=CODE,merge=1,delta=2
    29                           	psect	text10,local,class=CODE,merge=1,delta=2
    30                           	psect	text11,local,class=CODE,merge=1,delta=2
    31                           	psect	text12,local,class=CODE,merge=1,delta=2
    32                           	psect	text13,local,class=CODE,merge=1,delta=2
    33                           	psect	text14,local,class=CODE,merge=1,delta=2
    34                           	psect	text15,local,class=CODE,merge=1,delta=2
    35                           	psect	text16,local,class=CODE,merge=1,delta=2
    36                           	psect	text17,local,class=CODE,merge=1,delta=2
    37                           	psect	text18,local,class=CODE,merge=1,delta=2
    38                           	psect	text19,local,class=CODE,merge=1,delta=2
    39                           	dabs	1,0x7E,2
    40  0000                     
    41                           ; Version 1.45
    42                           ; Generated 16/11/2017 GMT
    43                           ; 
    44                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    45                           ; All rights reserved.
    46                           ; 
    47                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    48                           ; 
    49                           ; Redistribution and use in source and binary forms, with or without modification, are
    50                           ; permitted provided that the following conditions are met:
    51                           ; 
    52                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    53                           ;        conditions and the following disclaimer.
    54                           ; 
    55                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    56                           ;        of conditions and the following disclaimer in the documentation and/or other
    57                           ;        materials provided with the distribution.
    58                           ; 
    59                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    60                           ;        software without specific prior written permission.
    61                           ; 
    62                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    63                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    64                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    65                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    66                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    67                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    68                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    69                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    70                           ; 
    71                           ; 
    72                           ; Code-generator required, PIC16F886 Definitions
    73                           ; 
    74                           ; SFR Addresses
    75  0000                     	;# 
    76  0001                     	;# 
    77  0002                     	;# 
    78  0003                     	;# 
    79  0004                     	;# 
    80  0005                     	;# 
    81  0006                     	;# 
    82  0007                     	;# 
    83  0009                     	;# 
    84  000A                     	;# 
    85  000B                     	;# 
    86  000C                     	;# 
    87  000D                     	;# 
    88  000E                     	;# 
    89  000E                     	;# 
    90  000F                     	;# 
    91  0010                     	;# 
    92  0011                     	;# 
    93  0012                     	;# 
    94  0013                     	;# 
    95  0014                     	;# 
    96  0015                     	;# 
    97  0015                     	;# 
    98  0016                     	;# 
    99  0017                     	;# 
   100  0018                     	;# 
   101  0019                     	;# 
   102  001A                     	;# 
   103  001B                     	;# 
   104  001B                     	;# 
   105  001C                     	;# 
   106  001D                     	;# 
   107  001E                     	;# 
   108  001F                     	;# 
   109  0081                     	;# 
   110  0085                     	;# 
   111  0086                     	;# 
   112  0087                     	;# 
   113  0089                     	;# 
   114  008C                     	;# 
   115  008D                     	;# 
   116  008E                     	;# 
   117  008F                     	;# 
   118  0090                     	;# 
   119  0091                     	;# 
   120  0092                     	;# 
   121  0093                     	;# 
   122  0093                     	;# 
   123  0093                     	;# 
   124  0094                     	;# 
   125  0095                     	;# 
   126  0096                     	;# 
   127  0097                     	;# 
   128  0098                     	;# 
   129  0099                     	;# 
   130  009A                     	;# 
   131  009B                     	;# 
   132  009C                     	;# 
   133  009D                     	;# 
   134  009E                     	;# 
   135  009F                     	;# 
   136  0105                     	;# 
   137  0107                     	;# 
   138  0108                     	;# 
   139  0109                     	;# 
   140  010C                     	;# 
   141  010C                     	;# 
   142  010D                     	;# 
   143  010E                     	;# 
   144  010F                     	;# 
   145  0185                     	;# 
   146  0187                     	;# 
   147  0188                     	;# 
   148  0189                     	;# 
   149  018C                     	;# 
   150  018D                     	;# 
   151  0000                     	;# 
   152  0001                     	;# 
   153  0002                     	;# 
   154  0003                     	;# 
   155  0004                     	;# 
   156  0005                     	;# 
   157  0006                     	;# 
   158  0007                     	;# 
   159  0009                     	;# 
   160  000A                     	;# 
   161  000B                     	;# 
   162  000C                     	;# 
   163  000D                     	;# 
   164  000E                     	;# 
   165  000E                     	;# 
   166  000F                     	;# 
   167  0010                     	;# 
   168  0011                     	;# 
   169  0012                     	;# 
   170  0013                     	;# 
   171  0014                     	;# 
   172  0015                     	;# 
   173  0015                     	;# 
   174  0016                     	;# 
   175  0017                     	;# 
   176  0018                     	;# 
   177  0019                     	;# 
   178  001A                     	;# 
   179  001B                     	;# 
   180  001B                     	;# 
   181  001C                     	;# 
   182  001D                     	;# 
   183  001E                     	;# 
   184  001F                     	;# 
   185  0081                     	;# 
   186  0085                     	;# 
   187  0086                     	;# 
   188  0087                     	;# 
   189  0089                     	;# 
   190  008C                     	;# 
   191  008D                     	;# 
   192  008E                     	;# 
   193  008F                     	;# 
   194  0090                     	;# 
   195  0091                     	;# 
   196  0092                     	;# 
   197  0093                     	;# 
   198  0093                     	;# 
   199  0093                     	;# 
   200  0094                     	;# 
   201  0095                     	;# 
   202  0096                     	;# 
   203  0097                     	;# 
   204  0098                     	;# 
   205  0099                     	;# 
   206  009A                     	;# 
   207  009B                     	;# 
   208  009C                     	;# 
   209  009D                     	;# 
   210  009E                     	;# 
   211  009F                     	;# 
   212  0105                     	;# 
   213  0107                     	;# 
   214  0108                     	;# 
   215  0109                     	;# 
   216  010C                     	;# 
   217  010C                     	;# 
   218  010D                     	;# 
   219  010E                     	;# 
   220  010F                     	;# 
   221  0185                     	;# 
   222  0187                     	;# 
   223  0188                     	;# 
   224  0189                     	;# 
   225  018C                     	;# 
   226  018D                     	;# 
   227  0000                     	;# 
   228  0001                     	;# 
   229  0002                     	;# 
   230  0003                     	;# 
   231  0004                     	;# 
   232  0005                     	;# 
   233  0006                     	;# 
   234  0007                     	;# 
   235  0008                     	;# 
   236  0009                     	;# 
   237  000A                     	;# 
   238  000B                     	;# 
   239  000C                     	;# 
   240  000D                     	;# 
   241  000E                     	;# 
   242  000E                     	;# 
   243  000F                     	;# 
   244  0010                     	;# 
   245  0011                     	;# 
   246  0012                     	;# 
   247  0013                     	;# 
   248  0014                     	;# 
   249  0015                     	;# 
   250  0015                     	;# 
   251  0016                     	;# 
   252  0017                     	;# 
   253  0018                     	;# 
   254  0019                     	;# 
   255  001A                     	;# 
   256  001B                     	;# 
   257  001B                     	;# 
   258  001C                     	;# 
   259  001D                     	;# 
   260  001E                     	;# 
   261  001F                     	;# 
   262  0081                     	;# 
   263  0085                     	;# 
   264  0086                     	;# 
   265  0087                     	;# 
   266  0088                     	;# 
   267  0089                     	;# 
   268  008C                     	;# 
   269  008D                     	;# 
   270  008E                     	;# 
   271  008F                     	;# 
   272  0090                     	;# 
   273  0091                     	;# 
   274  0092                     	;# 
   275  0093                     	;# 
   276  0093                     	;# 
   277  0093                     	;# 
   278  0094                     	;# 
   279  0095                     	;# 
   280  0096                     	;# 
   281  0097                     	;# 
   282  0098                     	;# 
   283  0099                     	;# 
   284  009A                     	;# 
   285  009B                     	;# 
   286  009C                     	;# 
   287  009D                     	;# 
   288  009E                     	;# 
   289  009F                     	;# 
   290  0105                     	;# 
   291  0107                     	;# 
   292  0108                     	;# 
   293  0109                     	;# 
   294  010C                     	;# 
   295  010C                     	;# 
   296  010D                     	;# 
   297  010E                     	;# 
   298  010F                     	;# 
   299  0185                     	;# 
   300  0187                     	;# 
   301  0188                     	;# 
   302  0189                     	;# 
   303  018C                     	;# 
   304  018D                     	;# 
   305  0000                     	;# 
   306  0001                     	;# 
   307  0002                     	;# 
   308  0003                     	;# 
   309  0004                     	;# 
   310  0005                     	;# 
   311  0006                     	;# 
   312  0007                     	;# 
   313  0009                     	;# 
   314  000A                     	;# 
   315  000B                     	;# 
   316  000C                     	;# 
   317  000D                     	;# 
   318  000E                     	;# 
   319  000E                     	;# 
   320  000F                     	;# 
   321  0010                     	;# 
   322  0011                     	;# 
   323  0012                     	;# 
   324  0013                     	;# 
   325  0014                     	;# 
   326  0015                     	;# 
   327  0015                     	;# 
   328  0016                     	;# 
   329  0017                     	;# 
   330  0018                     	;# 
   331  0019                     	;# 
   332  001A                     	;# 
   333  001B                     	;# 
   334  001B                     	;# 
   335  001C                     	;# 
   336  001D                     	;# 
   337  001E                     	;# 
   338  001F                     	;# 
   339  0081                     	;# 
   340  0085                     	;# 
   341  0086                     	;# 
   342  0087                     	;# 
   343  0089                     	;# 
   344  008C                     	;# 
   345  008D                     	;# 
   346  008E                     	;# 
   347  008F                     	;# 
   348  0090                     	;# 
   349  0091                     	;# 
   350  0092                     	;# 
   351  0093                     	;# 
   352  0093                     	;# 
   353  0093                     	;# 
   354  0094                     	;# 
   355  0095                     	;# 
   356  0096                     	;# 
   357  0097                     	;# 
   358  0098                     	;# 
   359  0099                     	;# 
   360  009A                     	;# 
   361  009B                     	;# 
   362  009C                     	;# 
   363  009D                     	;# 
   364  009E                     	;# 
   365  009F                     	;# 
   366  0105                     	;# 
   367  0107                     	;# 
   368  0108                     	;# 
   369  0109                     	;# 
   370  010C                     	;# 
   371  010C                     	;# 
   372  010D                     	;# 
   373  010E                     	;# 
   374  010F                     	;# 
   375  0185                     	;# 
   376  0187                     	;# 
   377  0188                     	;# 
   378  0189                     	;# 
   379  018C                     	;# 
   380  018D                     	;# 
   381  0000                     	;# 
   382  0001                     	;# 
   383  0002                     	;# 
   384  0003                     	;# 
   385  0004                     	;# 
   386  0005                     	;# 
   387  0006                     	;# 
   388  0007                     	;# 
   389  0008                     	;# 
   390  0009                     	;# 
   391  000A                     	;# 
   392  000B                     	;# 
   393  000C                     	;# 
   394  000D                     	;# 
   395  000E                     	;# 
   396  000E                     	;# 
   397  000F                     	;# 
   398  0010                     	;# 
   399  0011                     	;# 
   400  0012                     	;# 
   401  0013                     	;# 
   402  0014                     	;# 
   403  0015                     	;# 
   404  0015                     	;# 
   405  0016                     	;# 
   406  0017                     	;# 
   407  0018                     	;# 
   408  0019                     	;# 
   409  001A                     	;# 
   410  001B                     	;# 
   411  001B                     	;# 
   412  001C                     	;# 
   413  001D                     	;# 
   414  001E                     	;# 
   415  001F                     	;# 
   416  0081                     	;# 
   417  0085                     	;# 
   418  0086                     	;# 
   419  0087                     	;# 
   420  0088                     	;# 
   421  0089                     	;# 
   422  008C                     	;# 
   423  008D                     	;# 
   424  008E                     	;# 
   425  008F                     	;# 
   426  0090                     	;# 
   427  0091                     	;# 
   428  0092                     	;# 
   429  0093                     	;# 
   430  0093                     	;# 
   431  0093                     	;# 
   432  0094                     	;# 
   433  0095                     	;# 
   434  0096                     	;# 
   435  0097                     	;# 
   436  0098                     	;# 
   437  0099                     	;# 
   438  009A                     	;# 
   439  009B                     	;# 
   440  009C                     	;# 
   441  009D                     	;# 
   442  009E                     	;# 
   443  009F                     	;# 
   444  0105                     	;# 
   445  0107                     	;# 
   446  0108                     	;# 
   447  0109                     	;# 
   448  010C                     	;# 
   449  010C                     	;# 
   450  010D                     	;# 
   451  010E                     	;# 
   452  010F                     	;# 
   453  0185                     	;# 
   454  0187                     	;# 
   455  0188                     	;# 
   456  0189                     	;# 
   457  018C                     	;# 
   458  018D                     	;# 
   459  0000                     	;# 
   460  0001                     	;# 
   461  0002                     	;# 
   462  0003                     	;# 
   463  0004                     	;# 
   464  0005                     	;# 
   465  0006                     	;# 
   466  0007                     	;# 
   467  0009                     	;# 
   468  000A                     	;# 
   469  000B                     	;# 
   470  000C                     	;# 
   471  000D                     	;# 
   472  000E                     	;# 
   473  000E                     	;# 
   474  000F                     	;# 
   475  0010                     	;# 
   476  0011                     	;# 
   477  0012                     	;# 
   478  0013                     	;# 
   479  0014                     	;# 
   480  0015                     	;# 
   481  0015                     	;# 
   482  0016                     	;# 
   483  0017                     	;# 
   484  0018                     	;# 
   485  0019                     	;# 
   486  001A                     	;# 
   487  001B                     	;# 
   488  001B                     	;# 
   489  001C                     	;# 
   490  001D                     	;# 
   491  001E                     	;# 
   492  001F                     	;# 
   493  0081                     	;# 
   494  0085                     	;# 
   495  0086                     	;# 
   496  0087                     	;# 
   497  0089                     	;# 
   498  008C                     	;# 
   499  008D                     	;# 
   500  008E                     	;# 
   501  008F                     	;# 
   502  0090                     	;# 
   503  0091                     	;# 
   504  0092                     	;# 
   505  0093                     	;# 
   506  0093                     	;# 
   507  0093                     	;# 
   508  0094                     	;# 
   509  0095                     	;# 
   510  0096                     	;# 
   511  0097                     	;# 
   512  0098                     	;# 
   513  0099                     	;# 
   514  009A                     	;# 
   515  009B                     	;# 
   516  009C                     	;# 
   517  009D                     	;# 
   518  009E                     	;# 
   519  009F                     	;# 
   520  0105                     	;# 
   521  0107                     	;# 
   522  0108                     	;# 
   523  0109                     	;# 
   524  010C                     	;# 
   525  010C                     	;# 
   526  010D                     	;# 
   527  010E                     	;# 
   528  010F                     	;# 
   529  0185                     	;# 
   530  0187                     	;# 
   531  0188                     	;# 
   532  0189                     	;# 
   533  018C                     	;# 
   534  018D                     	;# 
   535  0000                     	;# 
   536  0001                     	;# 
   537  0002                     	;# 
   538  0003                     	;# 
   539  0004                     	;# 
   540  0005                     	;# 
   541  0006                     	;# 
   542  0007                     	;# 
   543  0008                     	;# 
   544  0009                     	;# 
   545  000A                     	;# 
   546  000B                     	;# 
   547  000C                     	;# 
   548  000D                     	;# 
   549  000E                     	;# 
   550  000E                     	;# 
   551  000F                     	;# 
   552  0010                     	;# 
   553  0011                     	;# 
   554  0012                     	;# 
   555  0013                     	;# 
   556  0014                     	;# 
   557  0015                     	;# 
   558  0015                     	;# 
   559  0016                     	;# 
   560  0017                     	;# 
   561  0018                     	;# 
   562  0019                     	;# 
   563  001A                     	;# 
   564  001B                     	;# 
   565  001B                     	;# 
   566  001C                     	;# 
   567  001D                     	;# 
   568  001E                     	;# 
   569  001F                     	;# 
   570  0081                     	;# 
   571  0085                     	;# 
   572  0086                     	;# 
   573  0087                     	;# 
   574  0088                     	;# 
   575  0089                     	;# 
   576  008C                     	;# 
   577  008D                     	;# 
   578  008E                     	;# 
   579  008F                     	;# 
   580  0090                     	;# 
   581  0091                     	;# 
   582  0092                     	;# 
   583  0093                     	;# 
   584  0093                     	;# 
   585  0093                     	;# 
   586  0094                     	;# 
   587  0095                     	;# 
   588  0096                     	;# 
   589  0097                     	;# 
   590  0098                     	;# 
   591  0099                     	;# 
   592  009A                     	;# 
   593  009B                     	;# 
   594  009C                     	;# 
   595  009D                     	;# 
   596  009E                     	;# 
   597  009F                     	;# 
   598  0105                     	;# 
   599  0107                     	;# 
   600  0108                     	;# 
   601  0109                     	;# 
   602  010C                     	;# 
   603  010C                     	;# 
   604  010D                     	;# 
   605  010E                     	;# 
   606  010F                     	;# 
   607  0185                     	;# 
   608  0187                     	;# 
   609  0188                     	;# 
   610  0189                     	;# 
   611  018C                     	;# 
   612  018D                     	;# 
   613  0000                     	;# 
   614  0001                     	;# 
   615  0002                     	;# 
   616  0003                     	;# 
   617  0004                     	;# 
   618  0005                     	;# 
   619  0006                     	;# 
   620  0007                     	;# 
   621  0009                     	;# 
   622  000A                     	;# 
   623  000B                     	;# 
   624  000C                     	;# 
   625  000D                     	;# 
   626  000E                     	;# 
   627  000E                     	;# 
   628  000F                     	;# 
   629  0010                     	;# 
   630  0011                     	;# 
   631  0012                     	;# 
   632  0013                     	;# 
   633  0014                     	;# 
   634  0015                     	;# 
   635  0015                     	;# 
   636  0016                     	;# 
   637  0017                     	;# 
   638  0018                     	;# 
   639  0019                     	;# 
   640  001A                     	;# 
   641  001B                     	;# 
   642  001B                     	;# 
   643  001C                     	;# 
   644  001D                     	;# 
   645  001E                     	;# 
   646  001F                     	;# 
   647  0081                     	;# 
   648  0085                     	;# 
   649  0086                     	;# 
   650  0087                     	;# 
   651  0089                     	;# 
   652  008C                     	;# 
   653  008D                     	;# 
   654  008E                     	;# 
   655  008F                     	;# 
   656  0090                     	;# 
   657  0091                     	;# 
   658  0092                     	;# 
   659  0093                     	;# 
   660  0093                     	;# 
   661  0093                     	;# 
   662  0094                     	;# 
   663  0095                     	;# 
   664  0096                     	;# 
   665  0097                     	;# 
   666  0098                     	;# 
   667  0099                     	;# 
   668  009A                     	;# 
   669  009B                     	;# 
   670  009C                     	;# 
   671  009D                     	;# 
   672  009E                     	;# 
   673  009F                     	;# 
   674  0105                     	;# 
   675  0107                     	;# 
   676  0108                     	;# 
   677  0109                     	;# 
   678  010C                     	;# 
   679  010C                     	;# 
   680  010D                     	;# 
   681  010E                     	;# 
   682  010F                     	;# 
   683  0185                     	;# 
   684  0187                     	;# 
   685  0188                     	;# 
   686  0189                     	;# 
   687  018C                     	;# 
   688  018D                     	;# 
   689  0000                     	;# 
   690  0001                     	;# 
   691  0002                     	;# 
   692  0003                     	;# 
   693  0004                     	;# 
   694  0005                     	;# 
   695  0006                     	;# 
   696  0007                     	;# 
   697  0008                     	;# 
   698  0009                     	;# 
   699  000A                     	;# 
   700  000B                     	;# 
   701  000C                     	;# 
   702  000D                     	;# 
   703  000E                     	;# 
   704  000E                     	;# 
   705  000F                     	;# 
   706  0010                     	;# 
   707  0011                     	;# 
   708  0012                     	;# 
   709  0013                     	;# 
   710  0014                     	;# 
   711  0015                     	;# 
   712  0015                     	;# 
   713  0016                     	;# 
   714  0017                     	;# 
   715  0018                     	;# 
   716  0019                     	;# 
   717  001A                     	;# 
   718  001B                     	;# 
   719  001B                     	;# 
   720  001C                     	;# 
   721  001D                     	;# 
   722  001E                     	;# 
   723  001F                     	;# 
   724  0081                     	;# 
   725  0085                     	;# 
   726  0086                     	;# 
   727  0087                     	;# 
   728  0088                     	;# 
   729  0089                     	;# 
   730  008C                     	;# 
   731  008D                     	;# 
   732  008E                     	;# 
   733  008F                     	;# 
   734  0090                     	;# 
   735  0091                     	;# 
   736  0092                     	;# 
   737  0093                     	;# 
   738  0093                     	;# 
   739  0093                     	;# 
   740  0094                     	;# 
   741  0095                     	;# 
   742  0096                     	;# 
   743  0097                     	;# 
   744  0098                     	;# 
   745  0099                     	;# 
   746  009A                     	;# 
   747  009B                     	;# 
   748  009C                     	;# 
   749  009D                     	;# 
   750  009E                     	;# 
   751  009F                     	;# 
   752  0105                     	;# 
   753  0107                     	;# 
   754  0108                     	;# 
   755  0109                     	;# 
   756  010C                     	;# 
   757  010C                     	;# 
   758  010D                     	;# 
   759  010E                     	;# 
   760  010F                     	;# 
   761  0185                     	;# 
   762  0187                     	;# 
   763  0188                     	;# 
   764  0189                     	;# 
   765  018C                     	;# 
   766  018D                     	;# 
   767  0000                     	;# 
   768  0001                     	;# 
   769  0002                     	;# 
   770  0003                     	;# 
   771  0004                     	;# 
   772  0005                     	;# 
   773  0006                     	;# 
   774  0007                     	;# 
   775  0009                     	;# 
   776  000A                     	;# 
   777  000B                     	;# 
   778  000C                     	;# 
   779  000D                     	;# 
   780  000E                     	;# 
   781  000E                     	;# 
   782  000F                     	;# 
   783  0010                     	;# 
   784  0011                     	;# 
   785  0012                     	;# 
   786  0013                     	;# 
   787  0014                     	;# 
   788  0015                     	;# 
   789  0015                     	;# 
   790  0016                     	;# 
   791  0017                     	;# 
   792  0018                     	;# 
   793  0019                     	;# 
   794  001A                     	;# 
   795  001B                     	;# 
   796  001B                     	;# 
   797  001C                     	;# 
   798  001D                     	;# 
   799  001E                     	;# 
   800  001F                     	;# 
   801  0081                     	;# 
   802  0085                     	;# 
   803  0086                     	;# 
   804  0087                     	;# 
   805  0089                     	;# 
   806  008C                     	;# 
   807  008D                     	;# 
   808  008E                     	;# 
   809  008F                     	;# 
   810  0090                     	;# 
   811  0091                     	;# 
   812  0092                     	;# 
   813  0093                     	;# 
   814  0093                     	;# 
   815  0093                     	;# 
   816  0094                     	;# 
   817  0095                     	;# 
   818  0096                     	;# 
   819  0097                     	;# 
   820  0098                     	;# 
   821  0099                     	;# 
   822  009A                     	;# 
   823  009B                     	;# 
   824  009C                     	;# 
   825  009D                     	;# 
   826  009E                     	;# 
   827  009F                     	;# 
   828  0105                     	;# 
   829  0107                     	;# 
   830  0108                     	;# 
   831  0109                     	;# 
   832  010C                     	;# 
   833  010C                     	;# 
   834  010D                     	;# 
   835  010E                     	;# 
   836  010F                     	;# 
   837  0185                     	;# 
   838  0187                     	;# 
   839  0188                     	;# 
   840  0189                     	;# 
   841  018C                     	;# 
   842  018D                     	;# 
   843                           
   844                           	psect	idataBANK0
   845  0554                     __pidataBANK0:	
   846                           
   847                           ;initializer for _FMRX_Nref
   848  0554  3400               	retlw	0
   849  0555  340A               	retlw	10
   850                           
   851                           ;initializer for _CWTX_Nref
   852  0556  34A0               	retlw	160
   853  0557  3400               	retlw	0
   854                           
   855                           ;initializer for _FMTX_Nref
   856  0558  3400               	retlw	0
   857  0559  340A               	retlw	10
   858                           
   859                           	psect	idataBANK1
   860  046B                     __pidataBANK1:	
   861                           
   862                           ;initializer for _FMRX_Nprg
   863  046B  3402               	retlw	2
   864  046C  3400               	retlw	0
   865  046D  3404               	retlw	4
   866  046E  3400               	retlw	0
   867  046F  3408               	retlw	8
   868  0470  3400               	retlw	0
   869  0471  3408               	retlw	8
   870  0472  3400               	retlw	0
   871  0473  3407               	retlw	7
   872  0474  3400               	retlw	0
   873                           
   874                           ;initializer for _CWTX_Nprg
   875  0475  3400               	retlw	0
   876  0476  3400               	retlw	0
   877  0477  3401               	retlw	1
   878  0478  3400               	retlw	0
   879  0479  3407               	retlw	7
   880  047A  3400               	retlw	0
   881  047B  3404               	retlw	4
   882  047C  3400               	retlw	0
   883  047D  3407               	retlw	7
   884  047E  3400               	retlw	0
   885                           
   886                           ;initializer for _FMTX_Nprg
   887  047F  3408               	retlw	8
   888  0480  3400               	retlw	0
   889  0481  3407               	retlw	7
   890  0482  3400               	retlw	0
   891  0483  3403               	retlw	3
   892  0484  3400               	retlw	0
   893  0485  3400               	retlw	0
   894  0486  3400               	retlw	0
   895  0487  3400               	retlw	0
   896  0488  3400               	retlw	0
   897  0013                     _SSPBUF	set	19
   898  0014                     _SSPCON	set	20
   899  0003                     _STATUS	set	3
   900  0009                     _PORTE	set	9
   901  0007                     _PORTC	set	7
   902  0006                     _PORTB	set	6
   903  0005                     _PORTA	set	5
   904  0019                     _TXREG	set	25
   905  001A                     _RCREG	set	26
   906  003A                     _RC2	set	58
   907  003D                     _RC5	set	61
   908  0033                     _RB3	set	51
   909  0038                     _RC0	set	56
   910  0031                     _RB1	set	49
   911  0064                     _TXIF	set	100
   912  00C1                     _OERR	set	193
   913  00C2                     _FERR	set	194
   914  00C6                     _RX9	set	198
   915  0065                     _RCIF	set	101
   916  00C5                     _SREN	set	197
   917  00C4                     _CREN	set	196
   918  00C7                     _SPEN	set	199
   919  005E                     _PEIE	set	94
   920  005F                     _GIE	set	95
   921  0094                     _SSPSTAT	set	148
   922  0093                     _SSPADD	set	147
   923  0091                     _SSPCON2	set	145
   924  0089                     _TRISE	set	137
   925  0087                     _TRISC	set	135
   926  0086                     _TRISB	set	134
   927  0085                     _TRISA	set	133
   928  0099                     _SPBRG	set	153
   929  048C                     _ACKEN	set	1164
   930  048D                     _ACKDT	set	1165
   931  048B                     _RCEN	set	1163
   932  048A                     _PEN	set	1162
   933  0489                     _RSEN	set	1161
   934  0488                     _SEN	set	1160
   935  04C5                     _TXEN	set	1221
   936  04C6                     _TX9	set	1222
   937  0465                     _RCIE	set	1125
   938  0464                     _TXIE	set	1124
   939  04C4                     _SYNC	set	1220
   940  04C2                     _BRGH	set	1218
   941  0189                     _ANSELH	set	393
   942  0188                     _ANSEL	set	392
   943                           
   944                           	psect	strings
   945  04D8                     __pstrings:	
   946  04D8                     stringtab:	
   947  04D8                     __stringtab:	
   948  04D8                     stringcode:	
   949                           ;	String table - string pointers are 1 byte each
   950                           
   951  04D8                     stringdir:	
   952  04D8  3004               	movlw	high stringdir
   953  04D9  008A               	movwf	10
   954  04DA  0804               	movf	4,w
   955  04DB  0A84               	incf	4,f
   956  04DC  0782               	addwf	2,f
   957  04DD                     __stringbase:	
   958  04DD  3400               	retlw	0
   959  04DE                     __end_of__stringtab:	
   960  04DE                     STR_1:	
   961  04DE  344A               	retlw	74	;'J'
   962  04DF  3451               	retlw	81	;'Q'
   963  04E0  3431               	retlw	49	;'1'
   964  04E1  345A               	retlw	90	;'Z'
   965  04E2  3448               	retlw	72	;'H'
   966  04E3  3458               	retlw	88	;'X'
   967  04E4  3400               	retlw	0
   968  04E5                     STR_2:	
   969  04E5  344A               	retlw	74	;'J'
   970  04E6  3451               	retlw	81	;'Q'
   971  04E7  3431               	retlw	49	;'1'
   972  04E8  3459               	retlw	89	;'Y'
   973  04E9  3443               	retlw	67	;'C'
   974  04EA  345A               	retlw	90	;'Z'
   975  04EB  3400               	retlw	0
   976                           
   977                           ; #config settings
   978  0000                     
   979                           	psect	cinit
   980  0015                     start_initialization:	
   981  0015                     __initialization:	
   982                           
   983                           ; Initialize objects allocated to BANK1
   984  0015  1383               	bcf	3,7	;select IRP bank0
   985  0016  30BE               	movlw	low (__pdataBANK1+30)
   986  0017  00FD               	movwf	btemp+-1
   987  0018  3004               	movlw	high __pidataBANK1
   988  0019  00FE               	movwf	btemp
   989  001A  306B               	movlw	low __pidataBANK1
   990  001B  00FF               	movwf	btemp+1
   991  001C  30A0               	movlw	low __pdataBANK1
   992  001D  0084               	movwf	4
   993  001E  120A  118A  2502  120A  118A  	fcall	init_ram0
   994                           
   995                           ; Initialize objects allocated to BANK0
   996  0023  3069               	movlw	low (__pdataBANK0+6)
   997  0024  00FD               	movwf	btemp+-1
   998  0025  3005               	movlw	high __pidataBANK0
   999  0026  00FE               	movwf	btemp
  1000  0027  3054               	movlw	low __pidataBANK0
  1001  0028  00FF               	movwf	btemp+1
  1002  0029  3063               	movlw	low __pdataBANK0
  1003  002A  0084               	movwf	4
  1004  002B  120A  118A  2502  120A  118A  	fcall	init_ram0
  1005                           
  1006                           ; Clear objects allocated to BANK3
  1007  0030  1783               	bsf	3,7	;select IRP bank2
  1008  0031  3090               	movlw	low __pbssBANK3
  1009  0032  0084               	movwf	4
  1010  0033  30C2               	movlw	low (__pbssBANK3+50)
  1011  0034  120A  118A  2527  120A  118A  	fcall	clear_ram0
  1012                           
  1013                           ; Clear objects allocated to BANK1
  1014  0039  1383               	bcf	3,7	;select IRP bank0
  1015  003A  30D7               	movlw	low __pbssBANK1
  1016  003B  0084               	movwf	4
  1017  003C  30E7               	movlw	low (__pbssBANK1+16)
  1018  003D  120A  118A  2527  120A  118A  	fcall	clear_ram0
  1019                           
  1020                           ; Clear objects allocated to BANK0
  1021  0042  3059               	movlw	low __pbssBANK0
  1022  0043  0084               	movwf	4
  1023  0044  3063               	movlw	low (__pbssBANK0+10)
  1024  0045  120A  118A  2527   	fcall	clear_ram0
  1025  0048                     end_of_initialization:	
  1026                           ;End of C runtime variable initialization code
  1027                           
  1028  0048                     __end_of__initialization:	
  1029  0048  0183               	clrf	3
  1030  0049  120A  118A  2AF2   	ljmp	_main	;jump to C main() function
  1031                           
  1032                           	psect	bssBANK0
  1033  0059                     __pbssBANK0:	
  1034  0059                     _ebitstatus:	
  1035  0059                     	ds	2
  1036  005B                     _estuff:	
  1037  005B                     	ds	2
  1038  005D                     _efcsflag:	
  1039  005D                     	ds	2
  1040  005F                     _eflag:	
  1041  005F                     	ds	2
  1042  0061                     _efcshi:	
  1043  0061                     	ds	1
  1044  0062                     _efcslo:	
  1045  0062                     	ds	1
  1046                           
  1047                           	psect	dataBANK0
  1048  0063                     __pdataBANK0:	
  1049  0063                     _FMRX_Nref:	
  1050  0063                     	ds	2
  1051  0065                     _CWTX_Nref:	
  1052  0065                     	ds	2
  1053  0067                     _FMTX_Nref:	
  1054  0067                     	ds	2
  1055                           
  1056                           	psect	bssBANK1
  1057  00D7                     __pbssBANK1:	
  1058  00D7                     _EEPROMData:	
  1059  00D7                     	ds	16
  1060                           
  1061                           	psect	dataBANK1
  1062  00A0                     __pdataBANK1:	
  1063  00A0                     _FMRX_Nprg:	
  1064  00A0                     	ds	10
  1065  00AA                     _CWTX_Nprg:	
  1066  00AA                     	ds	10
  1067  00B4                     _FMTX_Nprg:	
  1068  00B4                     	ds	10
  1069                           
  1070                           	psect	bssBANK3
  1071  0190                     __pbssBANK3:	
  1072  0190                     _ePacket:	
  1073  0190                     	ds	50
  1074                           
  1075                           	psect	inittext
  1076  04FE                     init_fetch0:	
  1077                           ;	Called with low address in FSR and high address in W
  1078                           
  1079  04FE  087E               	movf	126,w
  1080  04FF  008A               	movwf	10
  1081  0500  087F               	movf	127,w
  1082  0501  0082               	movwf	2
  1083  0502                     init_ram0:	
  1084                           ;Called with:
  1085                           ;	high address of idata address in btemp 
  1086                           ;	low address of idata address in btemp+1 
  1087                           ;	low address of data in FSR
  1088                           ;	high address + 1 of data in btemp-1
  1089                           
  1090  0502  24FE  120A  118A   	fcall	init_fetch0
  1091  0505  0080               	movwf	0
  1092  0506  0A84               	incf	4,f
  1093  0507  0804               	movf	4,w
  1094  0508  067D               	xorwf	125,w
  1095  0509  1903               	btfsc	3,2
  1096  050A  3400               	retlw	0
  1097  050B  0AFF               	incf	127,f
  1098  050C  1903               	btfsc	3,2
  1099  050D  0AFE               	incf	126,f
  1100  050E  2D02               	goto	init_ram0
  1101                           
  1102                           	psect	clrtext
  1103  0527                     clear_ram0:	
  1104                           ;	Called with FSR containing the base address, and
  1105                           ;	W with the last address+1
  1106                           
  1107  0527  0064               	clrwdt	;clear the watchdog before getting into this loop
  1108  0528                     clrloop0:	
  1109  0528  0180               	clrf	0	;clear RAM location pointed to by FSR
  1110  0529  0A84               	incf	4,f	;increment pointer
  1111  052A  0604               	xorwf	4,w	;XOR with final address
  1112  052B  1903               	btfsc	3,2	;have we reached the end yet?
  1113  052C  3400               	retlw	0	;all done for this memory range, return
  1114  052D  0604               	xorwf	4,w	;XOR again to restore value
  1115  052E  2D28               	goto	clrloop0	;do the next byte
  1116                           
  1117                           	psect	cstackBANK1
  1118  00BE                     __pcstackBANK1:	
  1119  00BE                     ??_Init_SERIAL:	
  1120  00BE                     ??_Init_MPU:	
  1121                           ; 1 bytes @ 0x0
  1122                           
  1123  00BE                     ?___lldiv:	
  1124                           ; 1 bytes @ 0x0
  1125                           
  1126  00BE                     ___lldiv@divisor:	
  1127                           ; 4 bytes @ 0x0
  1128                           
  1129                           
  1130                           ; 4 bytes @ 0x0
  1131  00BE                     	ds	4
  1132  00C2                     ___lldiv@dividend:	
  1133                           
  1134                           ; 4 bytes @ 0x4
  1135  00C2                     	ds	4
  1136  00C6                     ??___lldiv:	
  1137                           
  1138                           ; 1 bytes @ 0x8
  1139  00C6                     	ds	1
  1140  00C7                     ___lldiv@quotient:	
  1141                           
  1142                           ; 4 bytes @ 0x9
  1143  00C7                     	ds	4
  1144  00CB                     ___lldiv@counter:	
  1145                           
  1146                           ; 1 bytes @ 0xD
  1147  00CB                     	ds	1
  1148  00CC                     ?_Init_I2C_M:	
  1149  00CC                     Init_I2C_M@c:	
  1150                           ; 1 bytes @ 0xE
  1151                           
  1152                           
  1153                           ; 4 bytes @ 0xE
  1154  00CC                     	ds	4
  1155  00D0                     ??_Init_I2C_M:	
  1156                           
  1157                           ; 1 bytes @ 0x12
  1158  00D0                     	ds	4
  1159  00D4                     ??_main:	
  1160                           
  1161                           ; 1 bytes @ 0x16
  1162  00D4                     	ds	3
  1163                           
  1164                           	psect	cstackCOMMON
  1165  0070                     __pcstackCOMMON:	
  1166  0070                     ?_SendPacket:	
  1167  0070                     ?_SendByte:	
  1168                           ; 1 bytes @ 0x0
  1169                           
  1170  0070                     ?_fcsbit:	
  1171                           ; 1 bytes @ 0x0
  1172                           
  1173  0070                     ??_fcsbit:	
  1174                           ; 1 bytes @ 0x0
  1175                           
  1176  0070                     ?_flipout:	
  1177                           ; 1 bytes @ 0x0
  1178                           
  1179  0070                     ??_flipout:	
  1180                           ; 1 bytes @ 0x0
  1181                           
  1182  0070                     ?_Init_SERIAL:	
  1183                           ; 1 bytes @ 0x0
  1184                           
  1185  0070                     ?_getch:	
  1186                           ; 1 bytes @ 0x0
  1187                           
  1188  0070                     ??_getch:	
  1189                           ; 1 bytes @ 0x0
  1190                           
  1191  0070                     ?_putch:	
  1192                           ; 1 bytes @ 0x0
  1193                           
  1194  0070                     ??_putch:	
  1195                           ; 1 bytes @ 0x0
  1196                           
  1197  0070                     ?_InterReceiver:	
  1198                           ; 1 bytes @ 0x0
  1199                           
  1200  0070                     ?_Init_MPU:	
  1201                           ; 1 bytes @ 0x0
  1202                           
  1203  0070                     ?_main:	
  1204                           ; 1 bytes @ 0x0
  1205                           
  1206  0070                     ?_I2C_Master_Wait:	
  1207                           ; 1 bytes @ 0x0
  1208                           
  1209  0070                     ??_I2C_Master_Wait:	
  1210                           ; 1 bytes @ 0x0
  1211                           
  1212  0070                     ?_I2C_Master_Start:	
  1213                           ; 1 bytes @ 0x0
  1214                           
  1215  0070                     ??_I2C_Master_Start:	
  1216                           ; 1 bytes @ 0x0
  1217                           
  1218  0070                     ?_I2C_Master_RepeatedStart:	
  1219                           ; 1 bytes @ 0x0
  1220                           
  1221  0070                     ??_I2C_Master_RepeatedStart:	
  1222                           ; 1 bytes @ 0x0
  1223                           
  1224  0070                     ?_I2C_Master_Stop:	
  1225                           ; 1 bytes @ 0x0
  1226                           
  1227  0070                     ??_I2C_Master_Stop:	
  1228                           ; 1 bytes @ 0x0
  1229                           
  1230  0070                     ?_I2C_Master_Write:	
  1231                           ; 1 bytes @ 0x0
  1232                           
  1233  0070                     ?_I2C_Master_Read:	
  1234                           ; 1 bytes @ 0x0
  1235                           
  1236  0070                     ??_I2C_Master_Read:	
  1237                           ; 1 bytes @ 0x0
  1238                           
  1239  0070                     ?_Packetmaker:	
  1240                           ; 1 bytes @ 0x0
  1241                           
  1242  0070                     putch@byte:	
  1243                           ; 2 bytes @ 0x0
  1244                           
  1245  0070                     I2C_Master_Write@d:	
  1246                           ; 1 bytes @ 0x0
  1247                           
  1248                           
  1249                           ; 2 bytes @ 0x0
  1250  0070                     	ds	1
  1251  0071                     I2C_Master_Read@a:	
  1252                           
  1253                           ; 1 bytes @ 0x1
  1254  0071                     	ds	1
  1255  0072                     ??_Packetmaker:	
  1256  0072                     ??_I2C_Master_Write:	
  1257                           ; 1 bytes @ 0x2
  1258                           
  1259  0072                     fcsbit@tbyte:	
  1260                           ; 1 bytes @ 0x2
  1261                           
  1262  0072                     I2C_Master_Read@temp:	
  1263                           ; 1 bytes @ 0x2
  1264                           
  1265                           
  1266                           ; 1 bytes @ 0x2
  1267  0072                     	ds	1
  1268  0073                     ?_EEPROM_Read:	
  1269  0073                     ??_SendByte:	
  1270                           ; 1 bytes @ 0x3
  1271                           
  1272  0073                     EEPROM_Read@high_address:	
  1273                           ; 1 bytes @ 0x3
  1274                           
  1275                           
  1276                           ; 1 bytes @ 0x3
  1277  0073                     	ds	1
  1278  0074                     Packetmaker@eDataField:	
  1279  0074                     EEPROM_Read@low_address:	
  1280                           ; 1 bytes @ 0x4
  1281                           
  1282                           
  1283                           ; 1 bytes @ 0x4
  1284  0074                     	ds	1
  1285  0075                     EEPROM_Read@ReadData:	
  1286  0075                     Packetmaker@i_135:	
  1287                           ; 1 bytes @ 0x5
  1288                           
  1289  0075                     SendByte@i:	
  1290                           ; 2 bytes @ 0x5
  1291                           
  1292                           
  1293                           ; 2 bytes @ 0x5
  1294  0075                     	ds	1
  1295  0076                     EEPROM_Read@EEPROMDataLength:	
  1296                           
  1297                           ; 1 bytes @ 0x6
  1298  0076                     	ds	1
  1299  0077                     ??_EEPROM_Read:	
  1300  0077                     SendByte@byte:	
  1301                           ; 1 bytes @ 0x7
  1302                           
  1303  0077                     Packetmaker@Datanum:	
  1304                           ; 1 bytes @ 0x7
  1305                           
  1306                           
  1307                           ; 2 bytes @ 0x7
  1308  0077                     	ds	1
  1309  0078                     SendByte@bt:	
  1310                           
  1311                           ; 1 bytes @ 0x8
  1312  0078                     	ds	1
  1313  0079                     Packetmaker@i:	
  1314                           
  1315                           ; 2 bytes @ 0x9
  1316  0079                     	ds	2
  1317  007B                     Packetmaker@i_132:	
  1318                           
  1319                           ; 2 bytes @ 0xB
  1320  007B                     	ds	2
  1321                           
  1322                           	psect	cstackBANK0
  1323  0020                     __pcstackBANK0:	
  1324  0020                     ??_SendPacket:	
  1325  0020                     EEPROM_Read@EEPROM_address:	
  1326                           ; 1 bytes @ 0x0
  1327                           
  1328                           
  1329                           ; 1 bytes @ 0x0
  1330  0020                     	ds	1
  1331  0021                     EEPROM_Read@ReadAddress:	
  1332                           
  1333                           ; 1 bytes @ 0x1
  1334  0021                     	ds	1
  1335  0022                     EEPROM_Read@i:	
  1336                           
  1337                           ; 2 bytes @ 0x2
  1338  0022                     	ds	1
  1339  0023                     SendPacket@Packetnum:	
  1340                           
  1341                           ; 2 bytes @ 0x3
  1342  0023                     	ds	1
  1343  0024                     EEPROM_Read@Address:	
  1344                           
  1345                           ; 1 bytes @ 0x4
  1346  0024                     	ds	1
  1347  0025                     SendPacket@eDataField:	
  1348                           
  1349                           ; 1 bytes @ 0x5
  1350  0025                     	ds	1
  1351  0026                     SendPacket@i:	
  1352                           
  1353                           ; 2 bytes @ 0x6
  1354  0026                     	ds	2
  1355  0028                     SendPacket@i_141:	
  1356                           
  1357                           ; 2 bytes @ 0x8
  1358  0028                     	ds	2
  1359  002A                     SendPacket@i_142:	
  1360                           
  1361                           ; 2 bytes @ 0xA
  1362  002A                     	ds	2
  1363  002C                     ??_InterReceiver:	
  1364                           
  1365                           ; 1 bytes @ 0xC
  1366  002C                     	ds	8
  1367  0034                     InterReceiver@RXDATA:	
  1368                           
  1369                           ; 32 bytes @ 0x14
  1370  0034                     	ds	32
  1371  0054                     InterReceiver@EEPROMCmdDataLength:	
  1372                           
  1373                           ; 2 bytes @ 0x34
  1374  0054                     	ds	2
  1375  0056                     InterReceiver@i:	
  1376                           
  1377                           ; 2 bytes @ 0x36
  1378  0056                     	ds	2
  1379  0058                     InterReceiver@EEPROMCmdData:	
  1380                           
  1381                           ; 1 bytes @ 0x38
  1382  0058                     	ds	1
  1383                           
  1384                           	psect	maintext
  1385  02F2                     __pmaintext:	
  1386 ;;
  1387 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1388 ;;
  1389 ;; *************** function _main *****************
  1390 ;; Defined at:
  1391 ;;		line 35 in file "main.c"
  1392 ;; Parameters:    Size  Location     Type
  1393 ;;		None
  1394 ;; Auto vars:     Size  Location     Type
  1395 ;;  EEPROMData     32    0        unsigned char [32]
  1396 ;;  EEPROMDataLe    2    0        unsigned int 
  1397 ;;  EEPROMData      2    0        PTR unsigned char 
  1398 ;;  dData           0    0        unsigned char [0]
  1399 ;; Return value:  Size  Location     Type
  1400 ;;                  1    wreg      void 
  1401 ;; Registers used:
  1402 ;;		wreg, status,2, status,0, pclath, cstack
  1403 ;; Tracked objects:
  1404 ;;		On entry : B00/0
  1405 ;;		On exit  : 0/0
  1406 ;;		Unchanged: 0/0
  1407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1408 ;;      Params:         0       0       0       0       0
  1409 ;;      Locals:         0       0       0       0       0
  1410 ;;      Temps:          0       0       3       0       0
  1411 ;;      Totals:         0       0       3       0       0
  1412 ;;Total ram usage:        3 bytes
  1413 ;; Hardware stack levels required when called:    6
  1414 ;; This function calls:
  1415 ;;		_Init_I2C_M
  1416 ;;		_Init_MPU
  1417 ;;		_Init_SERIAL
  1418 ;; This function is called by:
  1419 ;;		Startup code after reset
  1420 ;; This function uses a non-reentrant model
  1421 ;;
  1422                           
  1423                           
  1424                           ;psect for function _main
  1425  02F2                     _main:	
  1426                           
  1427                           ;main.c: 36: _delay((unsigned long)((1000)*(10000000/4000.0)));
  1428                           
  1429                           ;incstack = 0
  1430                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
  1431  02F2  300D               	movlw	13
  1432  02F3  1683               	bsf	3,5	;RP0=1, select bank1
  1433  02F4  1303               	bcf	3,6	;RP1=0, select bank1
  1434  02F5  00D6               	movwf	(??_main^(0+128)+2)
  1435  02F6  30AF               	movlw	175
  1436  02F7  00D5               	movwf	(??_main^(0+128)+1)
  1437  02F8  30B5               	movlw	181
  1438  02F9  00D4               	movwf	??_main^(0+128)
  1439  02FA                     u967:	
  1440  02FA  0BD4               	decfsz	??_main^(0+128),f
  1441  02FB  2AFA               	goto	u967
  1442  02FC  0BD5               	decfsz	(??_main^(0+128)+1),f
  1443  02FD  2AFA               	goto	u967
  1444  02FE  0BD6               	decfsz	(??_main^(0+128)+2),f
  1445  02FF  2AFA               	goto	u967
  1446  0300  2B01               	nop2
  1447                           
  1448                           ;main.c: 41: Init_SERIAL();
  1449  0301  120A  118A  2489  120A  118A  	fcall	_Init_SERIAL
  1450                           
  1451                           ;main.c: 42: Init_MPU();
  1452  0306  120A  118A  24A4  120A  118A  	fcall	_Init_MPU
  1453                           
  1454                           ;main.c: 45: Init_I2C_M(400000);
  1455  030B  3000               	movlw	0
  1456  030C  1683               	bsf	3,5	;RP0=1, select bank1
  1457  030D  1303               	bcf	3,6	;RP1=0, select bank1
  1458  030E  00CF               	movwf	(Init_I2C_M@c+3)^(0+128)
  1459  030F  3006               	movlw	6
  1460  0310  00CE               	movwf	(Init_I2C_M@c+2)^(0+128)
  1461  0311  301A               	movlw	26
  1462  0312  00CD               	movwf	(Init_I2C_M@c+1)^(0+128)
  1463  0313  3080               	movlw	128
  1464  0314  00CC               	movwf	Init_I2C_M@c^(0+128)
  1465  0315  120A  118A  2413  120A  118A  	fcall	_Init_I2C_M
  1466  031A  2B47               	goto	l1563
  1467  031B                     l1567:	
  1468                           
  1469                           ;main.c: 107: RC0 = 1;
  1470  031B  1407               	bsf	7,0	;volatile
  1471                           
  1472                           ;main.c: 108: RB3 = 0;
  1473  031C  1186               	bcf	6,3	;volatile
  1474                           
  1475                           ;main.c: 109: UBYTE EEPROMData[32];
  1476                           ;main.c: 110: UINT EEPROMDataLength;
  1477                           ;main.c: 112: _delay((unsigned long)((200)*(10000000/4000.0)));
  1478  031D  3003               	movlw	3
  1479  031E  1683               	bsf	3,5	;RP0=1, select bank1
  1480  031F  1303               	bcf	3,6	;RP1=0, select bank1
  1481  0320  00D6               	movwf	(??_main^(0+128)+2)
  1482  0321  308A               	movlw	138
  1483  0322  00D5               	movwf	(??_main^(0+128)+1)
  1484  0323  3055               	movlw	85
  1485  0324  00D4               	movwf	??_main^(0+128)
  1486  0325                     u987:	
  1487  0325  0BD4               	decfsz	??_main^(0+128),f
  1488  0326  2B25               	goto	u987
  1489  0327  0BD5               	decfsz	(??_main^(0+128)+1),f
  1490  0328  2B25               	goto	u987
  1491  0329  0BD6               	decfsz	(??_main^(0+128)+2),f
  1492  032A  2B25               	goto	u987
  1493                           
  1494                           ;main.c: 114: _delay((unsigned long)((200)*(10000000/4000.0)));
  1495  032B  3003               	movlw	3
  1496  032C  1683               	bsf	3,5	;RP0=1, select bank1
  1497  032D  1303               	bcf	3,6	;RP1=0, select bank1
  1498  032E  00D6               	movwf	(??_main^(0+128)+2)
  1499  032F  308A               	movlw	138
  1500  0330  00D5               	movwf	(??_main^(0+128)+1)
  1501  0331  3055               	movlw	85
  1502  0332  00D4               	movwf	??_main^(0+128)
  1503  0333                     u997:	
  1504  0333  0BD4               	decfsz	??_main^(0+128),f
  1505  0334  2B33               	goto	u997
  1506  0335  0BD5               	decfsz	(??_main^(0+128)+1),f
  1507  0336  2B33               	goto	u997
  1508  0337  0BD6               	decfsz	(??_main^(0+128)+2),f
  1509  0338  2B33               	goto	u997
  1510                           
  1511                           ;main.c: 130: _delay((unsigned long)((200)*(10000000/4000.0)));
  1512  0339  3003               	movlw	3
  1513  033A  1683               	bsf	3,5	;RP0=1, select bank1
  1514  033B  1303               	bcf	3,6	;RP1=0, select bank1
  1515  033C  00D6               	movwf	(??_main^(0+128)+2)
  1516  033D  308A               	movlw	138
  1517  033E  00D5               	movwf	(??_main^(0+128)+1)
  1518  033F  3055               	movlw	85
  1519  0340  00D4               	movwf	??_main^(0+128)
  1520  0341                     u1007:	
  1521  0341  0BD4               	decfsz	??_main^(0+128),f
  1522  0342  2B41               	goto	u1007
  1523  0343  0BD5               	decfsz	(??_main^(0+128)+1),f
  1524  0344  2B41               	goto	u1007
  1525  0345  0BD6               	decfsz	(??_main^(0+128)+2),f
  1526  0346  2B41               	goto	u1007
  1527  0347                     l1563:	
  1528                           ;main.c: 57: while(1){
  1529                           
  1530                           ;main.c: 155: }else{
  1531                           
  1532                           
  1533                           ;main.c: 73: UBYTE dData[];
  1534                           ;main.c: 83: _delay((unsigned long)((200)*(10000000/4000.0)));
  1535  0347  3003               	movlw	3
  1536  0348  1683               	bsf	3,5	;RP0=1, select bank1
  1537  0349  1303               	bcf	3,6	;RP1=0, select bank1
  1538  034A  00D6               	movwf	(??_main^(0+128)+2)
  1539  034B  308A               	movlw	138
  1540  034C  00D5               	movwf	(??_main^(0+128)+1)
  1541  034D  3055               	movlw	85
  1542  034E  00D4               	movwf	??_main^(0+128)
  1543  034F                     u977:	
  1544  034F  0BD4               	decfsz	??_main^(0+128),f
  1545  0350  2B4F               	goto	u977
  1546  0351  0BD5               	decfsz	(??_main^(0+128)+1),f
  1547  0352  2B4F               	goto	u977
  1548  0353  0BD6               	decfsz	(??_main^(0+128)+2),f
  1549  0354  2B4F               	goto	u977
  1550                           
  1551                           ;main.c: 105: UBYTE *EEPROMData;
  1552                           ;main.c: 106: if (RC2==1){
  1553  0355  1283               	bcf	3,5	;RP0=0, select bank0
  1554  0356  1303               	bcf	3,6	;RP1=0, select bank0
  1555  0357  1907               	btfsc	7,2	;volatile
  1556  0358  2B1B               	goto	l1567
  1557                           
  1558                           ;main.c: 157: RC0 = 0;
  1559  0359  1007               	bcf	7,0	;volatile
  1560  035A  2B47               	goto	l1563
  1561  035B                     __end_of_main:	
  1562                           
  1563                           	psect	text1
  1564  0489                     __ptext1:	
  1565 ;; *************** function _Init_SERIAL *****************
  1566 ;; Defined at:
  1567 ;;		line 8 in file "UART.c"
  1568 ;; Parameters:    Size  Location     Type
  1569 ;;		None
  1570 ;; Auto vars:     Size  Location     Type
  1571 ;;		None
  1572 ;; Return value:  Size  Location     Type
  1573 ;;                  1    wreg      void 
  1574 ;; Registers used:
  1575 ;;		wreg
  1576 ;; Tracked objects:
  1577 ;;		On entry : 0/0
  1578 ;;		On exit  : 0/0
  1579 ;;		Unchanged: 0/0
  1580 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1581 ;;      Params:         0       0       0       0       0
  1582 ;;      Locals:         0       0       0       0       0
  1583 ;;      Temps:          0       0       0       0       0
  1584 ;;      Totals:         0       0       0       0       0
  1585 ;;Total ram usage:        0 bytes
  1586 ;; Hardware stack levels used:    1
  1587 ;; Hardware stack levels required when called:    4
  1588 ;; This function calls:
  1589 ;;		Nothing
  1590 ;; This function is called by:
  1591 ;;		_main
  1592 ;; This function uses a non-reentrant model
  1593 ;;
  1594                           
  1595                           
  1596                           ;psect for function _Init_SERIAL
  1597  0489                     _Init_SERIAL:	
  1598                           
  1599                           ;UART.c: 9: SPBRG = 10;
  1600                           
  1601                           ;incstack = 0
  1602                           ; Regs used in _Init_SERIAL: [wreg]
  1603  0489  300A               	movlw	10
  1604  048A  1683               	bsf	3,5	;RP0=1, select bank1
  1605  048B  1303               	bcf	3,6	;RP1=0, select bank1
  1606  048C  0099               	movwf	25	;volatile
  1607                           
  1608                           ;UART.c: 10: GIE = 1;
  1609  048D  178B               	bsf	11,7	;volatile
  1610                           
  1611                           ;UART.c: 11: PEIE = 1;
  1612  048E  170B               	bsf	11,6	;volatile
  1613                           
  1614                           ;UART.c: 12: BRGH = 0;
  1615  048F  1118               	bcf	24,2	;volatile
  1616                           
  1617                           ;UART.c: 13: SYNC = 0;
  1618  0490  1218               	bcf	24,4	;volatile
  1619                           
  1620                           ;UART.c: 14: SPEN = 1;
  1621  0491  1283               	bcf	3,5	;RP0=0, select bank0
  1622  0492  1303               	bcf	3,6	;RP1=0, select bank0
  1623  0493  1798               	bsf	24,7	;volatile
  1624                           
  1625                           ;UART.c: 15: CREN = 1;
  1626  0494  1618               	bsf	24,4	;volatile
  1627                           
  1628                           ;UART.c: 16: SREN = 0;
  1629  0495  1298               	bcf	24,5	;volatile
  1630                           
  1631                           ;UART.c: 17: RCIF = 0;
  1632  0496  128C               	bcf	12,5	;volatile
  1633                           
  1634                           ;UART.c: 18: TXIE = 0;
  1635  0497  1683               	bsf	3,5	;RP0=1, select bank1
  1636  0498  1303               	bcf	3,6	;RP1=0, select bank1
  1637  0499  120C               	bcf	12,4	;volatile
  1638                           
  1639                           ;UART.c: 19: RCIE = 1;
  1640  049A  168C               	bsf	12,5	;volatile
  1641                           
  1642                           ;UART.c: 20: TX9 = 0;
  1643  049B  1318               	bcf	24,6	;volatile
  1644                           
  1645                           ;UART.c: 21: RX9 = 0;
  1646  049C  1283               	bcf	3,5	;RP0=0, select bank0
  1647  049D  1303               	bcf	3,6	;RP1=0, select bank0
  1648  049E  1318               	bcf	24,6	;volatile
  1649                           
  1650                           ;UART.c: 22: TXEN = 0;
  1651  049F  1683               	bsf	3,5	;RP0=1, select bank1
  1652  04A0  1303               	bcf	3,6	;RP1=0, select bank1
  1653  04A1  1298               	bcf	24,5	;volatile
  1654                           
  1655                           ;UART.c: 23: TXEN = 1;
  1656  04A2  1698               	bsf	24,5	;volatile
  1657  04A3  0008               	return
  1658  04A4                     __end_of_Init_SERIAL:	
  1659                           
  1660                           	psect	text2
  1661  04A4                     __ptext2:	
  1662 ;; *************** function _Init_MPU *****************
  1663 ;; Defined at:
  1664 ;;		line 8 in file "Init_MPU.c"
  1665 ;; Parameters:    Size  Location     Type
  1666 ;;		None
  1667 ;; Auto vars:     Size  Location     Type
  1668 ;;		None
  1669 ;; Return value:  Size  Location     Type
  1670 ;;                  1    wreg      void 
  1671 ;; Registers used:
  1672 ;;		wreg, status,2
  1673 ;; Tracked objects:
  1674 ;;		On entry : 0/0
  1675 ;;		On exit  : 0/0
  1676 ;;		Unchanged: 0/0
  1677 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1678 ;;      Params:         0       0       0       0       0
  1679 ;;      Locals:         0       0       0       0       0
  1680 ;;      Temps:          0       0       0       0       0
  1681 ;;      Totals:         0       0       0       0       0
  1682 ;;Total ram usage:        0 bytes
  1683 ;; Hardware stack levels used:    1
  1684 ;; Hardware stack levels required when called:    4
  1685 ;; This function calls:
  1686 ;;		Nothing
  1687 ;; This function is called by:
  1688 ;;		_main
  1689 ;; This function uses a non-reentrant model
  1690 ;;
  1691                           
  1692                           
  1693                           ;psect for function _Init_MPU
  1694  04A4                     _Init_MPU:	
  1695                           
  1696                           ;Init_MPU.c: 11: PORTA = 0x00;
  1697                           
  1698                           ;incstack = 0
  1699                           ; Regs used in _Init_MPU: [wreg+status,2]
  1700  04A4  1283               	bcf	3,5	;RP0=0, select bank0
  1701  04A5  1303               	bcf	3,6	;RP1=0, select bank0
  1702  04A6  0185               	clrf	5	;volatile
  1703                           
  1704                           ;Init_MPU.c: 12: PORTB = 0x00;
  1705  04A7  0186               	clrf	6	;volatile
  1706                           
  1707                           ;Init_MPU.c: 13: PORTC = 0x00;
  1708  04A8  0187               	clrf	7	;volatile
  1709                           
  1710                           ;Init_MPU.c: 15: PORTE = 0x00;
  1711  04A9  0189               	clrf	9	;volatile
  1712                           
  1713                           ;Init_MPU.c: 18: ANSEL = 0x00;
  1714  04AA  1683               	bsf	3,5	;RP0=1, select bank3
  1715  04AB  1703               	bsf	3,6	;RP1=1, select bank3
  1716  04AC  0188               	clrf	8	;volatile
  1717                           
  1718                           ;Init_MPU.c: 19: ANSELH = 0x00;
  1719  04AD  0189               	clrf	9	;volatile
  1720                           
  1721                           ;Init_MPU.c: 23: TRISA = 0b10000000;
  1722  04AE  3080               	movlw	128
  1723  04AF  1683               	bsf	3,5	;RP0=1, select bank1
  1724  04B0  1303               	bcf	3,6	;RP1=0, select bank1
  1725  04B1  0085               	movwf	5	;volatile
  1726                           
  1727                           ;Init_MPU.c: 24: TRISB = 0b00010000;
  1728  04B2  3010               	movlw	16
  1729  04B3  0086               	movwf	6	;volatile
  1730                           
  1731                           ;Init_MPU.c: 25: TRISC = 0b01011100;
  1732  04B4  305C               	movlw	92
  1733  04B5  0087               	movwf	7	;volatile
  1734                           
  1735                           ;Init_MPU.c: 27: TRISE = 0b00000000;
  1736  04B6  0189               	clrf	9	;volatile
  1737                           
  1738                           ;Init_MPU.c: 30: PORTA = 0x00;
  1739  04B7  1283               	bcf	3,5	;RP0=0, select bank0
  1740  04B8  1303               	bcf	3,6	;RP1=0, select bank0
  1741  04B9  0185               	clrf	5	;volatile
  1742                           
  1743                           ;Init_MPU.c: 31: PORTB = 0x00;
  1744  04BA  0186               	clrf	6	;volatile
  1745                           
  1746                           ;Init_MPU.c: 32: PORTC = 0x00;
  1747  04BB  0187               	clrf	7	;volatile
  1748                           
  1749                           ;Init_MPU.c: 34: PORTE = 0x00;
  1750  04BC  0189               	clrf	9	;volatile
  1751  04BD  0008               	return
  1752  04BE                     __end_of_Init_MPU:	
  1753                           
  1754                           	psect	text3
  1755  0413                     __ptext3:	
  1756 ;; *************** function _Init_I2C_M *****************
  1757 ;; Defined at:
  1758 ;;		line 11 in file "I2C.c"
  1759 ;; Parameters:    Size  Location     Type
  1760 ;;  c               4   14[BANK1 ] const unsigned long 
  1761 ;; Auto vars:     Size  Location     Type
  1762 ;;		None
  1763 ;; Return value:  Size  Location     Type
  1764 ;;                  1    wreg      void 
  1765 ;; Registers used:
  1766 ;;		wreg, status,2, status,0, pclath, cstack
  1767 ;; Tracked objects:
  1768 ;;		On entry : 0/0
  1769 ;;		On exit  : 0/0
  1770 ;;		Unchanged: 0/0
  1771 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1772 ;;      Params:         0       0       4       0       0
  1773 ;;      Locals:         0       0       0       0       0
  1774 ;;      Temps:          0       0       4       0       0
  1775 ;;      Totals:         0       0       8       0       0
  1776 ;;Total ram usage:        8 bytes
  1777 ;; Hardware stack levels used:    1
  1778 ;; Hardware stack levels required when called:    5
  1779 ;; This function calls:
  1780 ;;		___lldiv
  1781 ;; This function is called by:
  1782 ;;		_main
  1783 ;; This function uses a non-reentrant model
  1784 ;;
  1785                           
  1786                           
  1787                           ;psect for function _Init_I2C_M
  1788  0413                     _Init_I2C_M:	
  1789                           
  1790                           ;I2C.c: 12: SSPCON = 0b00101000;
  1791                           
  1792                           ;incstack = 0
  1793                           ; Regs used in _Init_I2C_M: [wreg+status,2+status,0+pclath+cstack]
  1794  0413  3028               	movlw	40
  1795  0414  1283               	bcf	3,5	;RP0=0, select bank0
  1796  0415  1303               	bcf	3,6	;RP1=0, select bank0
  1797  0416  0094               	movwf	20	;volatile
  1798                           
  1799                           ;I2C.c: 13: SSPCON2 = 0;
  1800  0417  1683               	bsf	3,5	;RP0=1, select bank1
  1801  0418  1303               	bcf	3,6	;RP1=0, select bank1
  1802  0419  0191               	clrf	17	;volatile
  1803                           
  1804                           ;I2C.c: 14: SSPADD = (10000000/(4*c))-1;
  1805  041A  084C               	movf	Init_I2C_M@c^(0+128),w
  1806  041B  00D0               	movwf	??_Init_I2C_M^(0+128)
  1807  041C  084D               	movf	(Init_I2C_M@c+1)^(0+128),w
  1808  041D  00D1               	movwf	(??_Init_I2C_M^(0+128)+1)
  1809  041E  084E               	movf	(Init_I2C_M@c+2)^(0+128),w
  1810  041F  00D2               	movwf	(??_Init_I2C_M^(0+128)+2)
  1811  0420  084F               	movf	(Init_I2C_M@c+3)^(0+128),w
  1812  0421  00D3               	movwf	(??_Init_I2C_M^(0+128)+3)
  1813  0422  3002               	movlw	2
  1814  0423                     u875:	
  1815  0423  1003               	clrc
  1816  0424  0DD0               	rlf	??_Init_I2C_M^(0+128),f
  1817  0425  0DD1               	rlf	(??_Init_I2C_M^(0+128)+1),f
  1818  0426  0DD2               	rlf	(??_Init_I2C_M^(0+128)+2),f
  1819  0427  0DD3               	rlf	(??_Init_I2C_M^(0+128)+3),f
  1820  0428  3EFF               	addlw	-1
  1821  0429  1D03               	skipz
  1822  042A  2C23               	goto	u875
  1823  042B  0853               	movf	(??_Init_I2C_M+3)^(0+128),w
  1824  042C  00C1               	movwf	(___lldiv@divisor+3)^(0+128)
  1825  042D  0852               	movf	(??_Init_I2C_M+2)^(0+128),w
  1826  042E  00C0               	movwf	(___lldiv@divisor+2)^(0+128)
  1827  042F  0851               	movf	(??_Init_I2C_M+1)^(0+128),w
  1828  0430  00BF               	movwf	(___lldiv@divisor+1)^(0+128)
  1829  0431  0850               	movf	??_Init_I2C_M^(0+128),w
  1830  0432  00BE               	movwf	___lldiv@divisor^(0+128)
  1831  0433  3000               	movlw	0
  1832  0434  00C5               	movwf	(___lldiv@dividend+3)^(0+128)
  1833  0435  3098               	movlw	152
  1834  0436  00C4               	movwf	(___lldiv@dividend+2)^(0+128)
  1835  0437  3096               	movlw	150
  1836  0438  00C3               	movwf	(___lldiv@dividend+1)^(0+128)
  1837  0439  3080               	movlw	128
  1838  043A  00C2               	movwf	___lldiv@dividend^(0+128)
  1839  043B  120A  118A  235B   	fcall	___lldiv
  1840  043E  1683               	bsf	3,5	;RP0=1, select bank1
  1841  043F  1303               	bcf	3,6	;RP1=0, select bank1
  1842  0440  083E               	movf	?___lldiv^(0+128),w
  1843  0441  3EFF               	addlw	255
  1844  0442  0093               	movwf	19	;volatile
  1845                           
  1846                           ;I2C.c: 15: SSPSTAT = 0;
  1847  0443  0194               	clrf	20	;volatile
  1848  0444  0008               	return
  1849  0445                     __end_of_Init_I2C_M:	
  1850                           
  1851                           	psect	text4
  1852  035B                     __ptext4:	
  1853 ;; *************** function ___lldiv *****************
  1854 ;; Defined at:
  1855 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
  1856 ;; Parameters:    Size  Location     Type
  1857 ;;  divisor         4    0[BANK1 ] unsigned long 
  1858 ;;  dividend        4    4[BANK1 ] unsigned long 
  1859 ;; Auto vars:     Size  Location     Type
  1860 ;;  quotient        4    9[BANK1 ] unsigned long 
  1861 ;;  counter         1   13[BANK1 ] unsigned char 
  1862 ;; Return value:  Size  Location     Type
  1863 ;;                  4    0[BANK1 ] unsigned long 
  1864 ;; Registers used:
  1865 ;;		wreg, status,2, status,0
  1866 ;; Tracked objects:
  1867 ;;		On entry : 0/0
  1868 ;;		On exit  : 0/0
  1869 ;;		Unchanged: 0/0
  1870 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1871 ;;      Params:         0       0       8       0       0
  1872 ;;      Locals:         0       0       5       0       0
  1873 ;;      Temps:          0       0       1       0       0
  1874 ;;      Totals:         0       0      14       0       0
  1875 ;;Total ram usage:       14 bytes
  1876 ;; Hardware stack levels used:    1
  1877 ;; Hardware stack levels required when called:    4
  1878 ;; This function calls:
  1879 ;;		Nothing
  1880 ;; This function is called by:
  1881 ;;		_Init_I2C_M
  1882 ;; This function uses a non-reentrant model
  1883 ;;
  1884                           
  1885                           
  1886                           ;psect for function ___lldiv
  1887  035B                     ___lldiv:	
  1888                           
  1889                           ;incstack = 0
  1890                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  1891  035B  3000               	movlw	0
  1892  035C  1683               	bsf	3,5	;RP0=1, select bank1
  1893  035D  1303               	bcf	3,6	;RP1=0, select bank1
  1894  035E  00CA               	movwf	(___lldiv@quotient+3)^(0+128)
  1895  035F  3000               	movlw	0
  1896  0360  00C9               	movwf	(___lldiv@quotient+2)^(0+128)
  1897  0361  3000               	movlw	0
  1898  0362  00C8               	movwf	(___lldiv@quotient+1)^(0+128)
  1899  0363  3000               	movlw	0
  1900  0364  00C7               	movwf	___lldiv@quotient^(0+128)
  1901  0365  0841               	movf	(___lldiv@divisor+3)^(0+128),w
  1902  0366  0440               	iorwf	(___lldiv@divisor+2)^(0+128),w
  1903  0367  043F               	iorwf	(___lldiv@divisor+1)^(0+128),w
  1904  0368  043E               	iorwf	___lldiv@divisor^(0+128),w
  1905  0369  1903               	skipnz
  1906  036A  2BB2               	goto	l1349
  1907  036B  01CB               	clrf	___lldiv@counter^(0+128)
  1908  036C  0ACB               	incf	___lldiv@counter^(0+128),f
  1909  036D                     l1335:	
  1910  036D  1BC1               	btfsc	(___lldiv@divisor+3)^(0+128),7
  1911  036E  2B7D               	goto	l1337
  1912  036F  3001               	movlw	1
  1913  0370  00C6               	movwf	??___lldiv^(0+128)
  1914  0371                     u705:	
  1915  0371  1003               	clrc
  1916  0372  0DBE               	rlf	___lldiv@divisor^(0+128),f
  1917  0373  0DBF               	rlf	(___lldiv@divisor+1)^(0+128),f
  1918  0374  0DC0               	rlf	(___lldiv@divisor+2)^(0+128),f
  1919  0375  0DC1               	rlf	(___lldiv@divisor+3)^(0+128),f
  1920  0376  0BC6               	decfsz	??___lldiv^(0+128),f
  1921  0377  2B71               	goto	u705
  1922  0378  3001               	movlw	1
  1923  0379  00C6               	movwf	??___lldiv^(0+128)
  1924  037A  0846               	movf	??___lldiv^(0+128),w
  1925  037B  07CB               	addwf	___lldiv@counter^(0+128),f
  1926  037C  2B6D               	goto	l1335
  1927  037D                     l1337:	
  1928  037D  3001               	movlw	1
  1929  037E  00C6               	movwf	??___lldiv^(0+128)
  1930  037F                     u725:	
  1931  037F  1003               	clrc
  1932  0380  0DC7               	rlf	___lldiv@quotient^(0+128),f
  1933  0381  0DC8               	rlf	(___lldiv@quotient+1)^(0+128),f
  1934  0382  0DC9               	rlf	(___lldiv@quotient+2)^(0+128),f
  1935  0383  0DCA               	rlf	(___lldiv@quotient+3)^(0+128),f
  1936  0384  0BC6               	decfsz	??___lldiv^(0+128),f
  1937  0385  2B7F               	goto	u725
  1938  0386  0841               	movf	(___lldiv@divisor+3)^(0+128),w
  1939  0387  0245               	subwf	(___lldiv@dividend+3)^(0+128),w
  1940  0388  1D03               	skipz
  1941  0389  2B94               	goto	u735
  1942  038A  0840               	movf	(___lldiv@divisor+2)^(0+128),w
  1943  038B  0244               	subwf	(___lldiv@dividend+2)^(0+128),w
  1944  038C  1D03               	skipz
  1945  038D  2B94               	goto	u735
  1946  038E  083F               	movf	(___lldiv@divisor+1)^(0+128),w
  1947  038F  0243               	subwf	(___lldiv@dividend+1)^(0+128),w
  1948  0390  1D03               	skipz
  1949  0391  2B94               	goto	u735
  1950  0392  083E               	movf	___lldiv@divisor^(0+128),w
  1951  0393  0242               	subwf	___lldiv@dividend^(0+128),w
  1952  0394                     u735:	
  1953  0394  1C03               	skipc
  1954  0395  2BA5               	goto	l1345
  1955  0396  083E               	movf	___lldiv@divisor^(0+128),w
  1956  0397  02C2               	subwf	___lldiv@dividend^(0+128),f
  1957  0398  083F               	movf	(___lldiv@divisor+1)^(0+128),w
  1958  0399  1C03               	skipc
  1959  039A  0F3F               	incfsz	(___lldiv@divisor+1)^(0+128),w
  1960  039B  02C3               	subwf	(___lldiv@dividend+1)^(0+128),f
  1961  039C  0840               	movf	(___lldiv@divisor+2)^(0+128),w
  1962  039D  1C03               	skipc
  1963  039E  0F40               	incfsz	(___lldiv@divisor+2)^(0+128),w
  1964  039F  02C4               	subwf	(___lldiv@dividend+2)^(0+128),f
  1965  03A0  0841               	movf	(___lldiv@divisor+3)^(0+128),w
  1966  03A1  1C03               	skipc
  1967  03A2  0F41               	incfsz	(___lldiv@divisor+3)^(0+128),w
  1968  03A3  02C5               	subwf	(___lldiv@dividend+3)^(0+128),f
  1969  03A4  1447               	bsf	___lldiv@quotient^(0+128),0
  1970  03A5                     l1345:	
  1971  03A5  3001               	movlw	1
  1972  03A6                     u745:	
  1973  03A6  1003               	clrc
  1974  03A7  0CC1               	rrf	(___lldiv@divisor+3)^(0+128),f
  1975  03A8  0CC0               	rrf	(___lldiv@divisor+2)^(0+128),f
  1976  03A9  0CBF               	rrf	(___lldiv@divisor+1)^(0+128),f
  1977  03AA  0CBE               	rrf	___lldiv@divisor^(0+128),f
  1978  03AB  3EFF               	addlw	-1
  1979  03AC  1D03               	skipz
  1980  03AD  2BA6               	goto	u745
  1981  03AE  3001               	movlw	1
  1982  03AF  02CB               	subwf	___lldiv@counter^(0+128),f
  1983  03B0  1D03               	btfss	3,2
  1984  03B1  2B7D               	goto	l1337
  1985  03B2                     l1349:	
  1986  03B2  084A               	movf	(___lldiv@quotient+3)^(0+128),w
  1987  03B3  00C1               	movwf	(?___lldiv+3)^(0+128)
  1988  03B4  0849               	movf	(___lldiv@quotient+2)^(0+128),w
  1989  03B5  00C0               	movwf	(?___lldiv+2)^(0+128)
  1990  03B6  0848               	movf	(___lldiv@quotient+1)^(0+128),w
  1991  03B7  00BF               	movwf	(?___lldiv+1)^(0+128)
  1992  03B8  0847               	movf	___lldiv@quotient^(0+128),w
  1993  03B9  00BE               	movwf	?___lldiv^(0+128)
  1994  03BA  0008               	return
  1995  03BB                     __end_of___lldiv:	
  1996                           
  1997                           	psect	text5
  1998  0255                     __ptext5:	
  1999 ;; *************** function _InterReceiver *****************
  2000 ;; Defined at:
  2001 ;;		line 88 in file "UART.c"
  2002 ;; Parameters:    Size  Location     Type
  2003 ;;		None
  2004 ;; Auto vars:     Size  Location     Type
  2005 ;;  i               2   54[BANK0 ] int 
  2006 ;;  EEPROMCmdDat    2   52[BANK0 ] unsigned int 
  2007 ;;  EEPROMCmdDat    1   56[BANK0 ] unsigned char [1]
  2008 ;;  RXDATA         32   20[BANK0 ] unsigned char [32]
  2009 ;; Return value:  Size  Location     Type
  2010 ;;                  1    wreg      void 
  2011 ;; Registers used:
  2012 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2013 ;; Tracked objects:
  2014 ;;		On entry : 0/0
  2015 ;;		On exit  : 0/0
  2016 ;;		Unchanged: 0/0
  2017 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2018 ;;      Params:         0       0       0       0       0
  2019 ;;      Locals:         0      37       0       0       0
  2020 ;;      Temps:          0       8       0       0       0
  2021 ;;      Totals:         0      45       0       0       0
  2022 ;;Total ram usage:       45 bytes
  2023 ;; Hardware stack levels used:    1
  2024 ;; Hardware stack levels required when called:    3
  2025 ;; This function calls:
  2026 ;;		_EEPROM_Read
  2027 ;;		_SendPacket
  2028 ;;		_getch
  2029 ;;		_putch
  2030 ;; This function is called by:
  2031 ;;		Interrupt level 1
  2032 ;; This function uses a non-reentrant model
  2033 ;;
  2034                           
  2035                           
  2036                           ;psect for function _InterReceiver
  2037  0255                     _InterReceiver:	
  2038                           
  2039                           ;UART.c: 89: UBYTE RXDATA[32];
  2040                           ;UART.c: 90: if (RCIF == 1) {
  2041  0255  1E8C               	btfss	12,5	;volatile
  2042  0256  2AE7               	goto	i1l94
  2043                           
  2044                           ;UART.c: 93: RXDATA[0] = getch();
  2045  0257  120A  118A  250F  120A  118A  	fcall	_getch
  2046  025C  1283               	bcf	3,5	;RP0=0, select bank0
  2047  025D  1303               	bcf	3,6	;RP1=0, select bank0
  2048  025E  00AC               	movwf	??_InterReceiver
  2049  025F  082C               	movf	??_InterReceiver,w
  2050  0260  00B4               	movwf	InterReceiver@RXDATA
  2051                           
  2052                           ;UART.c: 94: putch(RXDATA[0]);
  2053  0261  0834               	movf	InterReceiver@RXDATA,w
  2054  0262  120A  118A  252F  120A  118A  	fcall	_putch
  2055                           
  2056                           ;UART.c: 96: if (RXDATA[0] == 0x74){
  2057  0267  3074               	movlw	116
  2058  0268  1283               	bcf	3,5	;RP0=0, select bank0
  2059  0269  1303               	bcf	3,6	;RP1=0, select bank0
  2060  026A  0634               	xorwf	InterReceiver@RXDATA,w
  2061  026B  1D03               	btfss	3,2
  2062  026C  2AE6               	goto	i1l90
  2063                           
  2064                           ;UART.c: 97: RB1 = 1;
  2065  026D  1486               	bsf	6,1	;volatile
  2066                           
  2067                           ;UART.c: 98: RXDATA[1] = getch();
  2068  026E  120A  118A  250F  120A  118A  	fcall	_getch
  2069  0273  1283               	bcf	3,5	;RP0=0, select bank0
  2070  0274  1303               	bcf	3,6	;RP1=0, select bank0
  2071  0275  00AC               	movwf	??_InterReceiver
  2072  0276  082C               	movf	??_InterReceiver,w
  2073  0277  00B5               	movwf	InterReceiver@RXDATA+1
  2074                           
  2075                           ;UART.c: 99: RXDATA[2] = getch();
  2076  0278  120A  118A  250F  120A  118A  	fcall	_getch
  2077  027D  1283               	bcf	3,5	;RP0=0, select bank0
  2078  027E  1303               	bcf	3,6	;RP1=0, select bank0
  2079  027F  00AC               	movwf	??_InterReceiver
  2080  0280  082C               	movf	??_InterReceiver,w
  2081  0281  00B6               	movwf	InterReceiver@RXDATA+2
  2082                           
  2083                           ;UART.c: 100: RCIF = 0 ;
  2084  0282  128C               	bcf	12,5	;volatile
  2085                           
  2086                           ;UART.c: 102: _delay((unsigned long)((200)*(10000000/4000.0)));
  2087  0283  3003               	movlw	3
  2088  0284  1283               	bcf	3,5	;RP0=0, select bank0
  2089  0285  1303               	bcf	3,6	;RP1=0, select bank0
  2090  0286  00AE               	movwf	??_InterReceiver+2
  2091  0287  308A               	movlw	138
  2092  0288  00AD               	movwf	??_InterReceiver+1
  2093  0289  3055               	movlw	85
  2094  028A  00AC               	movwf	??_InterReceiver
  2095  028B                     u101_27:	
  2096  028B  0BAC               	decfsz	??_InterReceiver,f
  2097  028C  2A8B               	goto	u101_27
  2098  028D  0BAD               	decfsz	??_InterReceiver+1,f
  2099  028E  2A8B               	goto	u101_27
  2100  028F  0BAE               	decfsz	??_InterReceiver+2,f
  2101  0290  2A8B               	goto	u101_27
  2102                           
  2103                           ;UART.c: 103: UBYTE EEPROMCmdData[1];
  2104                           ;UART.c: 104: UINT EEPROMCmdDataLength;
  2105                           ;UART.c: 105: EEPROM_Read(0x50,RXDATA[1],RXDATA[2], EEPROMCmdData,&EEPROMCmdDataLength);
  2106  0291  1283               	bcf	3,5	;RP0=0, select bank0
  2107  0292  1303               	bcf	3,6	;RP1=0, select bank0
  2108  0293  0835               	movf	InterReceiver@RXDATA+1,w
  2109  0294  00AC               	movwf	??_InterReceiver
  2110  0295  082C               	movf	??_InterReceiver,w
  2111  0296  00F3               	movwf	EEPROM_Read@high_address
  2112  0297  0836               	movf	InterReceiver@RXDATA+2,w
  2113  0298  00AD               	movwf	??_InterReceiver+1
  2114  0299  082D               	movf	??_InterReceiver+1,w
  2115  029A  00F4               	movwf	EEPROM_Read@low_address
  2116  029B  3058               	movlw	(low (InterReceiver@EEPROMCmdData| 0))& (0+255)
  2117  029C  00AE               	movwf	??_InterReceiver+2
  2118  029D  082E               	movf	??_InterReceiver+2,w
  2119  029E  00F5               	movwf	EEPROM_Read@ReadData
  2120  029F  3054               	movlw	(low (InterReceiver@EEPROMCmdDataLength| 0))& (0+255)
  2121  02A0  00AF               	movwf	??_InterReceiver+3
  2122  02A1  082F               	movf	??_InterReceiver+3,w
  2123  02A2  00F6               	movwf	EEPROM_Read@EEPROMDataLength
  2124  02A3  3050               	movlw	80
  2125  02A4  120A  118A  2104  120A  118A  	fcall	_EEPROM_Read
  2126                           
  2127                           ;UART.c: 106: RC0 = 1;
  2128  02A9  1283               	bcf	3,5	;RP0=0, select bank0
  2129  02AA  1303               	bcf	3,6	;RP1=0, select bank0
  2130  02AB  1407               	bsf	7,0	;volatile
  2131                           
  2132                           ;UART.c: 107: RB3 = 0;
  2133  02AC  1186               	bcf	6,3	;volatile
  2134                           
  2135                           ;UART.c: 113: for(int i = 0; i<5;i++){
  2136  02AD  01D6               	clrf	InterReceiver@i
  2137  02AE  01D7               	clrf	InterReceiver@i+1
  2138  02AF  0857               	movf	InterReceiver@i+1,w
  2139  02B0  3A80               	xorlw	128
  2140  02B1  00FF               	movwf	127
  2141  02B2  3080               	movlw	128
  2142  02B3  027F               	subwf	127,w
  2143  02B4  1D03               	skipz
  2144  02B5  2AB8               	goto	u90_25
  2145  02B6  3005               	movlw	5
  2146  02B7  0256               	subwf	InterReceiver@i,w
  2147  02B8                     u90_25:	
  2148  02B8  1803               	btfsc	3,0
  2149  02B9  2AE1               	goto	i1l92
  2150  02BA                     i1l1547:	
  2151                           
  2152                           ;UART.c: 115: SendPacket(EEPROMCmdData);
  2153  02BA  3058               	movlw	(low (InterReceiver@EEPROMCmdData| 0))& (0+255)
  2154  02BB  120A  118A  204C  120A  118A  	fcall	_SendPacket
  2155                           
  2156                           ;UART.c: 116: _delay((unsigned long)((200)*(10000000/4000.0)));
  2157  02C0  3003               	movlw	3
  2158  02C1  1283               	bcf	3,5	;RP0=0, select bank0
  2159  02C2  1303               	bcf	3,6	;RP1=0, select bank0
  2160  02C3  00AE               	movwf	??_InterReceiver+2
  2161  02C4  308A               	movlw	138
  2162  02C5  00AD               	movwf	??_InterReceiver+1
  2163  02C6  3055               	movlw	85
  2164  02C7  00AC               	movwf	??_InterReceiver
  2165  02C8                     u102_27:	
  2166  02C8  0BAC               	decfsz	??_InterReceiver,f
  2167  02C9  2AC8               	goto	u102_27
  2168  02CA  0BAD               	decfsz	??_InterReceiver+1,f
  2169  02CB  2AC8               	goto	u102_27
  2170  02CC  0BAE               	decfsz	??_InterReceiver+2,f
  2171  02CD  2AC8               	goto	u102_27
  2172  02CE  3001               	movlw	1
  2173  02CF  1283               	bcf	3,5	;RP0=0, select bank0
  2174  02D0  1303               	bcf	3,6	;RP1=0, select bank0
  2175  02D1  07D6               	addwf	InterReceiver@i,f
  2176  02D2  1803               	skipnc
  2177  02D3  0AD7               	incf	InterReceiver@i+1,f
  2178  02D4  3000               	movlw	0
  2179  02D5  07D7               	addwf	InterReceiver@i+1,f
  2180  02D6  0857               	movf	InterReceiver@i+1,w
  2181  02D7  3A80               	xorlw	128
  2182  02D8  00FF               	movwf	127
  2183  02D9  3080               	movlw	128
  2184  02DA  027F               	subwf	127,w
  2185  02DB  1D03               	skipz
  2186  02DC  2ADF               	goto	u91_25
  2187  02DD  3005               	movlw	5
  2188  02DE  0256               	subwf	InterReceiver@i,w
  2189  02DF                     u91_25:	
  2190  02DF  1C03               	skipc
  2191  02E0  2ABA               	goto	i1l1547
  2192  02E1                     i1l92:	
  2193                           
  2194                           ;UART.c: 117: }
  2195                           ;UART.c: 118: RC0 = 0;
  2196  02E1  1283               	bcf	3,5	;RP0=0, select bank0
  2197  02E2  1303               	bcf	3,6	;RP1=0, select bank0
  2198  02E3  1007               	bcf	7,0	;volatile
  2199                           
  2200                           ;UART.c: 119: RB1 = 0;
  2201  02E4  1086               	bcf	6,1	;volatile
  2202                           
  2203                           ;UART.c: 120: }else{
  2204  02E5  2AE7               	goto	i1l94
  2205  02E6                     i1l90:	
  2206                           
  2207                           ;UART.c: 121: RCIF = 0 ;
  2208  02E6  128C               	bcf	12,5	;volatile
  2209  02E7                     i1l94:	
  2210  02E7  0833               	movf	??_InterReceiver+7,w
  2211  02E8  00FF               	movwf	127
  2212  02E9  0832               	movf	??_InterReceiver+6,w
  2213  02EA  008A               	movwf	10
  2214  02EB  0831               	movf	??_InterReceiver+5,w
  2215  02EC  0084               	movwf	4
  2216  02ED  0E30               	swapf	(??_InterReceiver+4)^0,w
  2217  02EE  0083               	movwf	3
  2218  02EF  0EFE               	swapf	126,f
  2219  02F0  0E7E               	swapf	126,w
  2220  02F1  0009               	retfie
  2221  02F2                     __end_of_InterReceiver:	
  2222                           
  2223                           	psect	intentry
  2224  0004                     __pintentry:	
  2225                           ;incstack = 0
  2226                           ; Regs used in _InterReceiver: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2227                           
  2228  0004                     interrupt_function:	
  2229  007E                     saved_w	set	btemp
  2230  0004  00FE               	movwf	btemp
  2231  0005  0E03               	swapf	3,w
  2232  0006  1283               	bcf	3,5	;RP0=0, select bank0
  2233  0007  1303               	bcf	3,6	;RP1=0, select bank0
  2234  0008  00B0               	movwf	??_InterReceiver+4
  2235  0009  0804               	movf	4,w
  2236  000A  00B1               	movwf	??_InterReceiver+5
  2237  000B  080A               	movf	10,w
  2238  000C  00B2               	movwf	??_InterReceiver+6
  2239  000D  087F               	movf	btemp+1,w
  2240  000E  00B3               	movwf	??_InterReceiver+7
  2241  000F  120A  118A  2A55   	ljmp	_InterReceiver
  2242                           
  2243                           	psect	text6
  2244  052F                     __ptext6:	
  2245 ;; *************** function _putch *****************
  2246 ;; Defined at:
  2247 ;;		line 46 in file "UART.c"
  2248 ;; Parameters:    Size  Location     Type
  2249 ;;  byte            1    wreg     unsigned char 
  2250 ;; Auto vars:     Size  Location     Type
  2251 ;;  byte            1    0[COMMON] unsigned char 
  2252 ;; Return value:  Size  Location     Type
  2253 ;;                  1    wreg      void 
  2254 ;; Registers used:
  2255 ;;		wreg
  2256 ;; Tracked objects:
  2257 ;;		On entry : 0/0
  2258 ;;		On exit  : 0/0
  2259 ;;		Unchanged: 0/0
  2260 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2261 ;;      Params:         0       0       0       0       0
  2262 ;;      Locals:         1       0       0       0       0
  2263 ;;      Temps:          0       0       0       0       0
  2264 ;;      Totals:         1       0       0       0       0
  2265 ;;Total ram usage:        1 bytes
  2266 ;; Hardware stack levels used:    1
  2267 ;; This function calls:
  2268 ;;		Nothing
  2269 ;; This function is called by:
  2270 ;;		_InterReceiver
  2271 ;; This function uses a non-reentrant model
  2272 ;;
  2273                           
  2274                           
  2275                           ;psect for function _putch
  2276  052F                     _putch:	
  2277                           
  2278                           ;incstack = 0
  2279                           ; Regs used in _putch: [wreg]
  2280                           ;putch@byte stored from wreg
  2281  052F  00F0               	movwf	putch@byte
  2282  0530                     i1l81:	
  2283                           ;UART.c: 47: while(!TXIF);
  2284                           
  2285  0530  1283               	bcf	3,5	;RP0=0, select bank0
  2286  0531  1303               	bcf	3,6	;RP1=0, select bank0
  2287  0532  1E0C               	btfss	12,4	;volatile
  2288  0533  2D30               	goto	i1l81
  2289                           
  2290                           ;UART.c: 48: TXREG = byte;
  2291  0534  0870               	movf	putch@byte,w
  2292  0535  0099               	movwf	25	;volatile
  2293  0536  0008               	return
  2294  0537                     __end_of_putch:	
  2295                           
  2296                           	psect	text7
  2297  050F                     __ptext7:	
  2298 ;; *************** function _getch *****************
  2299 ;; Defined at:
  2300 ;;		line 26 in file "UART.c"
  2301 ;; Parameters:    Size  Location     Type
  2302 ;;		None
  2303 ;; Auto vars:     Size  Location     Type
  2304 ;;		None
  2305 ;; Return value:  Size  Location     Type
  2306 ;;                  1    wreg      unsigned char 
  2307 ;; Registers used:
  2308 ;;		wreg
  2309 ;; Tracked objects:
  2310 ;;		On entry : 0/0
  2311 ;;		On exit  : 0/0
  2312 ;;		Unchanged: 0/0
  2313 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2314 ;;      Params:         0       0       0       0       0
  2315 ;;      Locals:         0       0       0       0       0
  2316 ;;      Temps:          0       0       0       0       0
  2317 ;;      Totals:         0       0       0       0       0
  2318 ;;Total ram usage:        0 bytes
  2319 ;; Hardware stack levels used:    1
  2320 ;; This function calls:
  2321 ;;		Nothing
  2322 ;; This function is called by:
  2323 ;;		_InterReceiver
  2324 ;; This function uses a non-reentrant model
  2325 ;;
  2326                           
  2327                           
  2328                           ;psect for function _getch
  2329  050F                     _getch:	
  2330                           
  2331                           ;UART.c: 28: if(FERR || OERR)
  2332                           
  2333                           ;incstack = 0
  2334                           ; Regs used in _getch: [wreg]
  2335  050F  1283               	bcf	3,5	;RP0=0, select bank0
  2336  0510  1303               	bcf	3,6	;RP1=0, select bank0
  2337  0511  1918               	btfsc	24,2	;volatile
  2338  0512  2D15               	goto	i1l74
  2339  0513  1C98               	btfss	24,1	;volatile
  2340  0514  2D1A               	goto	i1l75
  2341  0515                     i1l74:	
  2342                           
  2343                           ;UART.c: 29: {
  2344                           ;UART.c: 35: CREN = 0;
  2345  0515  1218               	bcf	24,4	;volatile
  2346                           
  2347                           ;UART.c: 36: __nop();
  2348  0516  0000               	nop
  2349                           
  2350                           ;UART.c: 37: CREN = 1;
  2351  0517  1283               	bcf	3,5	;RP0=0, select bank0
  2352  0518  1303               	bcf	3,6	;RP1=0, select bank0
  2353  0519  1618               	bsf	24,4	;volatile
  2354  051A                     i1l75:	
  2355                           ;UART.c: 38: }
  2356                           ;UART.c: 39: while(!RCIF);
  2357                           
  2358  051A  1E8C               	btfss	12,5	;volatile
  2359  051B  2D1A               	goto	i1l75
  2360                           
  2361                           ;UART.c: 43: return RCREG;
  2362  051C  081A               	movf	26,w	;volatile
  2363  051D  0008               	return
  2364  051E                     __end_of_getch:	
  2365                           
  2366                           	psect	text8
  2367  004C                     __ptext8:	
  2368 ;; *************** function _SendPacket *****************
  2369 ;; Defined at:
  2370 ;;		line 59 in file "encode_AX25.c"
  2371 ;; Parameters:    Size  Location     Type
  2372 ;;  eDataField      1    wreg     PTR unsigned char 
  2373 ;;		 -> InterReceiver@EEPROMCmdData(1), 
  2374 ;; Auto vars:     Size  Location     Type
  2375 ;;  eDataField      1    5[BANK0 ] PTR unsigned char 
  2376 ;;		 -> InterReceiver@EEPROMCmdData(1), 
  2377 ;;  i               2   10[BANK0 ] unsigned int 
  2378 ;;  i               2    8[BANK0 ] unsigned int 
  2379 ;;  i               2    6[BANK0 ] unsigned int 
  2380 ;;  Packetnum       2    3[BANK0 ] unsigned int 
  2381 ;; Return value:  Size  Location     Type
  2382 ;;                  1    wreg      void 
  2383 ;; Registers used:
  2384 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2385 ;; Tracked objects:
  2386 ;;		On entry : 0/0
  2387 ;;		On exit  : 0/0
  2388 ;;		Unchanged: 0/0
  2389 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2390 ;;      Params:         0       0       0       0       0
  2391 ;;      Locals:         0       9       0       0       0
  2392 ;;      Temps:          0       3       0       0       0
  2393 ;;      Totals:         0      12       0       0       0
  2394 ;;Total ram usage:       12 bytes
  2395 ;; Hardware stack levels used:    1
  2396 ;; Hardware stack levels required when called:    2
  2397 ;; This function calls:
  2398 ;;		_Packetmaker
  2399 ;;		_SendByte
  2400 ;; This function is called by:
  2401 ;;		_InterReceiver
  2402 ;; This function uses a non-reentrant model
  2403 ;;
  2404                           
  2405                           
  2406                           ;psect for function _SendPacket
  2407  004C                     _SendPacket:	
  2408                           
  2409                           ;incstack = 0
  2410                           ; Regs used in _SendPacket: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2411                           ;SendPacket@eDataField stored from wreg
  2412  004C  1283               	bcf	3,5	;RP0=0, select bank0
  2413  004D  1303               	bcf	3,6	;RP1=0, select bank0
  2414  004E  00A5               	movwf	SendPacket@eDataField
  2415                           
  2416                           ;encode_AX25.c: 62: _delay((unsigned long)((200)*(10000000/4000.0)));
  2417  004F  3003               	movlw	3
  2418  0050  1283               	bcf	3,5	;RP0=0, select bank0
  2419  0051  1303               	bcf	3,6	;RP1=0, select bank0
  2420  0052  00A2               	movwf	??_SendPacket+2
  2421  0053  308A               	movlw	138
  2422  0054  00A1               	movwf	??_SendPacket+1
  2423  0055  3055               	movlw	85
  2424  0056  00A0               	movwf	??_SendPacket
  2425  0057                     u103_27:	
  2426  0057  0BA0               	decfsz	??_SendPacket,f
  2427  0058  2857               	goto	u103_27
  2428  0059  0BA1               	decfsz	??_SendPacket+1,f
  2429  005A  2857               	goto	u103_27
  2430  005B  0BA2               	decfsz	??_SendPacket+2,f
  2431  005C  2857               	goto	u103_27
  2432                           
  2433                           ;encode_AX25.c: 63: UINT Packetnum;
  2434                           ;encode_AX25.c: 64: Packetnum = 0;
  2435  005D  1283               	bcf	3,5	;RP0=0, select bank0
  2436  005E  1303               	bcf	3,6	;RP1=0, select bank0
  2437  005F  01A3               	clrf	SendPacket@Packetnum
  2438  0060  01A4               	clrf	SendPacket@Packetnum+1
  2439                           
  2440                           ;encode_AX25.c: 65: Packetnum = Packetmaker(eDataField);
  2441  0061  0825               	movf	SendPacket@eDataField,w
  2442  0062  120A  118A  21B4  120A  118A  	fcall	_Packetmaker
  2443  0067  0871               	movf	?_Packetmaker+1,w
  2444  0068  1283               	bcf	3,5	;RP0=0, select bank0
  2445  0069  1303               	bcf	3,6	;RP1=0, select bank0
  2446  006A  00A4               	movwf	SendPacket@Packetnum+1
  2447  006B  0870               	movf	?_Packetmaker,w
  2448  006C  00A3               	movwf	SendPacket@Packetnum
  2449                           
  2450                           ;encode_AX25.c: 66: ebitstatus = 1;
  2451  006D  3001               	movlw	1
  2452  006E  00D9               	movwf	_ebitstatus
  2453  006F  3000               	movlw	0
  2454  0070  00DA               	movwf	_ebitstatus+1
  2455                           
  2456                           ;encode_AX25.c: 67: efcslo = efcshi = 0xff;
  2457  0071  30FF               	movlw	255
  2458  0072  00E1               	movwf	_efcshi
  2459  0073  00A0               	movwf	??_SendPacket
  2460  0074  0820               	movf	??_SendPacket,w
  2461  0075  00E2               	movwf	_efcslo
  2462                           
  2463                           ;encode_AX25.c: 68: estuff = 0;
  2464  0076  01DB               	clrf	_estuff
  2465  0077  01DC               	clrf	_estuff+1
  2466                           
  2467                           ;encode_AX25.c: 70: eflag = 1;
  2468  0078  3001               	movlw	1
  2469  0079  00DF               	movwf	_eflag
  2470  007A  3000               	movlw	0
  2471  007B  00E0               	movwf	_eflag+1
  2472                           
  2473                           ;encode_AX25.c: 71: efcsflag = 0;
  2474  007C  01DD               	clrf	_efcsflag
  2475  007D  01DE               	clrf	_efcsflag+1
  2476                           
  2477                           ;encode_AX25.c: 72: for(UINT i=0;i<27;i++){
  2478  007E  01A6               	clrf	SendPacket@i
  2479  007F  01A7               	clrf	SendPacket@i+1
  2480  0080  3000               	movlw	0
  2481  0081  0227               	subwf	SendPacket@i+1,w
  2482  0082  301B               	movlw	27
  2483  0083  1903               	skipnz
  2484  0084  0226               	subwf	SendPacket@i,w
  2485  0085  1803               	btfsc	3,0
  2486  0086  289C               	goto	i1l1459
  2487  0087                     i1l1453:	
  2488                           
  2489                           ;encode_AX25.c: 73: SendByte(0x7e);
  2490  0087  307E               	movlw	126
  2491  0088  120A  118A  23BB  120A  118A  	fcall	_SendByte
  2492  008D  3001               	movlw	1
  2493  008E  1283               	bcf	3,5	;RP0=0, select bank0
  2494  008F  1303               	bcf	3,6	;RP1=0, select bank0
  2495  0090  07A6               	addwf	SendPacket@i,f
  2496  0091  1803               	skipnc
  2497  0092  0AA7               	incf	SendPacket@i+1,f
  2498  0093  3000               	movlw	0
  2499  0094  07A7               	addwf	SendPacket@i+1,f
  2500  0095  3000               	movlw	0
  2501  0096  0227               	subwf	SendPacket@i+1,w
  2502  0097  301B               	movlw	27
  2503  0098  1903               	skipnz
  2504  0099  0226               	subwf	SendPacket@i,w
  2505  009A  1C03               	skipc
  2506  009B  2887               	goto	i1l1453
  2507  009C                     i1l1459:	
  2508                           
  2509                           ;encode_AX25.c: 74: }
  2510                           ;encode_AX25.c: 75: eflag = 0;
  2511  009C  01DF               	clrf	_eflag
  2512  009D  01E0               	clrf	_eflag+1
  2513                           
  2514                           ;encode_AX25.c: 77: for(UINT i=0;i<Packetnum;i++){
  2515  009E  01A8               	clrf	SendPacket@i_141
  2516  009F  01A9               	clrf	SendPacket@i_141+1
  2517  00A0                     i1l1465:	
  2518  00A0  0824               	movf	SendPacket@Packetnum+1,w
  2519  00A1  0229               	subwf	SendPacket@i_141+1,w
  2520  00A2  1D03               	skipz
  2521  00A3  28A6               	goto	u84_25
  2522  00A4  0823               	movf	SendPacket@Packetnum,w
  2523  00A5  0228               	subwf	SendPacket@i_141,w
  2524  00A6                     u84_25:	
  2525  00A6  1803               	btfsc	3,0
  2526  00A7  28BB               	goto	i1l1467
  2527                           
  2528                           ;encode_AX25.c: 78: SendByte(ePacket[i]);
  2529  00A8  0828               	movf	SendPacket@i_141,w
  2530  00A9  3E90               	addlw	(low (_ePacket| (0+256)))& (0+255)
  2531  00AA  0084               	movwf	4
  2532  00AB  1783               	bsf	3,7	;select IRP bank3
  2533  00AC  0800               	movf	0,w
  2534  00AD  120A  118A  23BB  120A  118A  	fcall	_SendByte
  2535  00B2  3001               	movlw	1
  2536  00B3  1283               	bcf	3,5	;RP0=0, select bank0
  2537  00B4  1303               	bcf	3,6	;RP1=0, select bank0
  2538  00B5  07A8               	addwf	SendPacket@i_141,f
  2539  00B6  1803               	skipnc
  2540  00B7  0AA9               	incf	SendPacket@i_141+1,f
  2541  00B8  3000               	movlw	0
  2542  00B9  07A9               	addwf	SendPacket@i_141+1,f
  2543  00BA  28A0               	goto	i1l1465
  2544  00BB                     i1l1467:	
  2545                           
  2546                           ;encode_AX25.c: 79: }
  2547                           ;encode_AX25.c: 83: efcsflag = 1;
  2548  00BB  3001               	movlw	1
  2549  00BC  00DD               	movwf	_efcsflag
  2550  00BD  3000               	movlw	0
  2551  00BE  00DE               	movwf	_efcsflag+1
  2552                           
  2553                           ;encode_AX25.c: 84: efcslo = efcslo ^ 0xff;
  2554  00BF  09E2               	comf	_efcslo,f
  2555                           
  2556                           ;encode_AX25.c: 85: efcshi = efcshi ^ 0xff;
  2557  00C0  09E1               	comf	_efcshi,f
  2558                           
  2559                           ;encode_AX25.c: 86: SendByte(efcslo);
  2560  00C1  0862               	movf	_efcslo,w
  2561  00C2  120A  118A  23BB  120A  118A  	fcall	_SendByte
  2562                           
  2563                           ;encode_AX25.c: 87: SendByte(efcshi);
  2564  00C7  1283               	bcf	3,5	;RP0=0, select bank0
  2565  00C8  1303               	bcf	3,6	;RP1=0, select bank0
  2566  00C9  0861               	movf	_efcshi,w
  2567  00CA  120A  118A  23BB  120A  118A  	fcall	_SendByte
  2568                           
  2569                           ;encode_AX25.c: 88: efcsflag = 0;
  2570  00CF  1283               	bcf	3,5	;RP0=0, select bank0
  2571  00D0  1303               	bcf	3,6	;RP1=0, select bank0
  2572  00D1  01DD               	clrf	_efcsflag
  2573  00D2  01DE               	clrf	_efcsflag+1
  2574                           
  2575                           ;encode_AX25.c: 91: eflag = 1;
  2576  00D3  3001               	movlw	1
  2577  00D4  00DF               	movwf	_eflag
  2578  00D5  3000               	movlw	0
  2579  00D6  00E0               	movwf	_eflag+1
  2580                           
  2581                           ;encode_AX25.c: 92: for(UINT i=0;i<6;i++){
  2582  00D7  01AA               	clrf	SendPacket@i_142
  2583  00D8  01AB               	clrf	SendPacket@i_142+1
  2584  00D9  3000               	movlw	0
  2585  00DA  022B               	subwf	SendPacket@i_142+1,w
  2586  00DB  3006               	movlw	6
  2587  00DC  1903               	skipnz
  2588  00DD  022A               	subwf	SendPacket@i_142,w
  2589  00DE  1803               	btfsc	3,0
  2590  00DF  28F5               	goto	i1l1491
  2591  00E0                     i1l1485:	
  2592                           
  2593                           ;encode_AX25.c: 93: SendByte(0x7e);
  2594  00E0  307E               	movlw	126
  2595  00E1  120A  118A  23BB  120A  118A  	fcall	_SendByte
  2596  00E6  3001               	movlw	1
  2597  00E7  1283               	bcf	3,5	;RP0=0, select bank0
  2598  00E8  1303               	bcf	3,6	;RP1=0, select bank0
  2599  00E9  07AA               	addwf	SendPacket@i_142,f
  2600  00EA  1803               	skipnc
  2601  00EB  0AAB               	incf	SendPacket@i_142+1,f
  2602  00EC  3000               	movlw	0
  2603  00ED  07AB               	addwf	SendPacket@i_142+1,f
  2604  00EE  3000               	movlw	0
  2605  00EF  022B               	subwf	SendPacket@i_142+1,w
  2606  00F0  3006               	movlw	6
  2607  00F1  1903               	skipnz
  2608  00F2  022A               	subwf	SendPacket@i_142,w
  2609  00F3  1C03               	skipc
  2610  00F4  28E0               	goto	i1l1485
  2611  00F5                     i1l1491:	
  2612                           
  2613                           ;encode_AX25.c: 94: }
  2614                           ;encode_AX25.c: 96: _delay((unsigned long)((200)*(10000000/4000.0)));
  2615  00F5  3003               	movlw	3
  2616  00F6  1283               	bcf	3,5	;RP0=0, select bank0
  2617  00F7  1303               	bcf	3,6	;RP1=0, select bank0
  2618  00F8  00A2               	movwf	??_SendPacket+2
  2619  00F9  308A               	movlw	138
  2620  00FA  00A1               	movwf	??_SendPacket+1
  2621  00FB  3055               	movlw	85
  2622  00FC  00A0               	movwf	??_SendPacket
  2623  00FD                     u104_27:	
  2624  00FD  0BA0               	decfsz	??_SendPacket,f
  2625  00FE  28FD               	goto	u104_27
  2626  00FF  0BA1               	decfsz	??_SendPacket+1,f
  2627  0100  28FD               	goto	u104_27
  2628  0101  0BA2               	decfsz	??_SendPacket+2,f
  2629  0102  28FD               	goto	u104_27
  2630  0103  0008               	return
  2631  0104                     __end_of_SendPacket:	
  2632                           
  2633                           	psect	text9
  2634  03BB                     __ptext9:	
  2635 ;; *************** function _SendByte *****************
  2636 ;; Defined at:
  2637 ;;		line 101 in file "encode_AX25.c"
  2638 ;; Parameters:    Size  Location     Type
  2639 ;;  byte            1    wreg     unsigned char 
  2640 ;; Auto vars:     Size  Location     Type
  2641 ;;  byte            1    7[COMMON] unsigned char 
  2642 ;;  i               2    5[COMMON] unsigned int 
  2643 ;;  bt              1    8[COMMON] unsigned char 
  2644 ;; Return value:  Size  Location     Type
  2645 ;;                  1    wreg      void 
  2646 ;; Registers used:
  2647 ;;		wreg, status,2, status,0, pclath, cstack
  2648 ;; Tracked objects:
  2649 ;;		On entry : 0/0
  2650 ;;		On exit  : 0/0
  2651 ;;		Unchanged: 0/0
  2652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2653 ;;      Params:         0       0       0       0       0
  2654 ;;      Locals:         4       0       0       0       0
  2655 ;;      Temps:          2       0       0       0       0
  2656 ;;      Totals:         6       0       0       0       0
  2657 ;;Total ram usage:        6 bytes
  2658 ;; Hardware stack levels used:    1
  2659 ;; Hardware stack levels required when called:    1
  2660 ;; This function calls:
  2661 ;;		_fcsbit
  2662 ;;		_flipout
  2663 ;; This function is called by:
  2664 ;;		_SendPacket
  2665 ;; This function uses a non-reentrant model
  2666 ;;
  2667                           
  2668                           
  2669                           ;psect for function _SendByte
  2670  03BB                     _SendByte:	
  2671                           
  2672                           ;incstack = 0
  2673                           ; Regs used in _SendByte: [wreg+status,2+status,0+pclath+cstack]
  2674                           ;SendByte@byte stored from wreg
  2675  03BB  00F7               	movwf	SendByte@byte
  2676                           
  2677                           ;encode_AX25.c: 102: UBYTE bt;
  2678                           ;encode_AX25.c: 103: for(UINT i=0;i<8;i++){
  2679  03BC  01F5               	clrf	SendByte@i
  2680  03BD  01F6               	clrf	SendByte@i+1
  2681  03BE                     L2:	
  2682  03BE  3000               	movlw	0
  2683  03BF  0276               	subwf	SendByte@i+1,w
  2684  03C0  3008               	movlw	8
  2685  03C1  1903               	skipnz
  2686  03C2  0275               	subwf	SendByte@i,w
  2687  03C3  1803               	btfsc	3,0
  2688  03C4  0008               	return
  2689                           
  2690                           ;encode_AX25.c: 104: bt = byte & 0x01;
  2691  03C5  0877               	movf	SendByte@byte,w
  2692  03C6  3901               	andlw	1
  2693  03C7  00F3               	movwf	??_SendByte
  2694  03C8  0873               	movf	??_SendByte,w
  2695  03C9  00F8               	movwf	SendByte@bt
  2696                           
  2697                           ;encode_AX25.c: 106: if(efcsflag == 0 && eflag == 0){
  2698  03CA  1283               	bcf	3,5	;RP0=0, select bank0
  2699  03CB  1303               	bcf	3,6	;RP1=0, select bank0
  2700  03CC  085D               	movf	_efcsflag,w
  2701  03CD  045E               	iorwf	_efcsflag+1,w
  2702  03CE  1D03               	btfss	3,2
  2703  03CF  2BDA               	goto	i1l1275
  2704  03D0  085F               	movf	_eflag,w
  2705  03D1  0460               	iorwf	_eflag+1,w
  2706  03D2  1D03               	btfss	3,2
  2707  03D3  2BDA               	goto	i1l1275
  2708                           
  2709                           ;encode_AX25.c: 107: fcsbit(bt);
  2710  03D4  0878               	movf	SendByte@bt,w
  2711  03D5  120A  118A  24BE  120A  118A  	fcall	_fcsbit
  2712  03DA                     i1l1275:	
  2713                           
  2714                           ;encode_AX25.c: 108: }
  2715                           ;encode_AX25.c: 110: if(bt == 0x00){
  2716  03DA  0878               	movf	SendByte@bt,w
  2717  03DB  1903               	btfsc	3,2
  2718  03DC  2BF7               	goto	L1
  2719                           
  2720                           ;encode_AX25.c: 113: estuff ++;
  2721                           
  2722                           ;encode_AX25.c: 112: }else{
  2723                           
  2724                           ;encode_AX25.c: 111: flipout();
  2725  03DD  3001               	movlw	1
  2726  03DE  1283               	bcf	3,5	;RP0=0, select bank0
  2727  03DF  1303               	bcf	3,6	;RP1=0, select bank0
  2728  03E0  07DB               	addwf	_estuff,f
  2729  03E1  1803               	skipnc
  2730  03E2  0ADC               	incf	_estuff+1,f
  2731  03E3  3000               	movlw	0
  2732  03E4  07DC               	addwf	_estuff+1,f
  2733                           
  2734                           ;encode_AX25.c: 115: if(eflag == 0 && estuff == 5){
  2735  03E5  085F               	movf	_eflag,w
  2736  03E6  0460               	iorwf	_eflag+1,w
  2737  03E7  1D03               	btfss	3,2
  2738  03E8  2BFC               	goto	i1l1289
  2739  03E9  3005               	movlw	5
  2740  03EA  065B               	xorwf	_estuff,w
  2741  03EB  045C               	iorwf	_estuff+1,w
  2742  03EC  1D03               	btfss	3,2
  2743  03ED  2BFC               	goto	i1l1289
  2744                           
  2745                           ;encode_AX25.c: 116: _delay((unsigned long)((795)*(10000000/4000000.0)));
  2746  03EE  3003               	movlw	3
  2747  03EF  00F4               	movwf	??_SendByte+1
  2748  03F0  3093               	movlw	147
  2749  03F1  00F3               	movwf	??_SendByte
  2750  03F2                     u105_27:	
  2751  03F2  0BF3               	decfsz	??_SendByte,f
  2752  03F3  2BF2               	goto	u105_27
  2753  03F4  0BF4               	decfsz	??_SendByte+1,f
  2754  03F5  2BF2               	goto	u105_27
  2755  03F6  0000               	nop
  2756  03F7                     L1:	
  2757                           
  2758                           ;encode_AX25.c: 117: flipout();
  2759  03F7  120A  118A  24EC  120A  118A  	fcall	_flipout
  2760  03FC                     i1l1289:	
  2761                           
  2762                           ;encode_AX25.c: 118: }
  2763                           ;encode_AX25.c: 119: }
  2764                           ;encode_AX25.c: 120: _delay((unsigned long)((795)*(10000000/4000000.0)));
  2765  03FC  3003               	movlw	3
  2766  03FD  00F4               	movwf	??_SendByte+1
  2767  03FE  3093               	movlw	147
  2768  03FF  00F3               	movwf	??_SendByte
  2769  0400                     u106_27:	
  2770  0400  0BF3               	decfsz	??_SendByte,f
  2771  0401  2C00               	goto	u106_27
  2772  0402  0BF4               	decfsz	??_SendByte+1,f
  2773  0403  2C00               	goto	u106_27
  2774  0404  0000               	nop
  2775                           
  2776                           ;encode_AX25.c: 121: byte = byte >> 1;
  2777  0405  0877               	movf	SendByte@byte,w
  2778  0406  00F3               	movwf	??_SendByte
  2779  0407  1003               	clrc
  2780  0408  0C73               	rrf	??_SendByte,w
  2781  0409  00F4               	movwf	??_SendByte+1
  2782  040A  0874               	movf	??_SendByte+1,w
  2783  040B  00F7               	movwf	SendByte@byte
  2784  040C  3001               	movlw	1
  2785  040D  07F5               	addwf	SendByte@i,f
  2786  040E  1803               	skipnc
  2787  040F  0AF6               	incf	SendByte@i+1,f
  2788  0410  3000               	movlw	0
  2789  0411  07F6               	addwf	SendByte@i+1,f
  2790  0412  2BBE               	goto	L2
  2791  0413                     __end_of_SendByte:	
  2792                           
  2793                           	psect	text10
  2794  04EC                     __ptext10:	
  2795 ;; *************** function _flipout *****************
  2796 ;; Defined at:
  2797 ;;		line 125 in file "encode_AX25.c"
  2798 ;; Parameters:    Size  Location     Type
  2799 ;;		None
  2800 ;; Auto vars:     Size  Location     Type
  2801 ;;		None
  2802 ;; Return value:  Size  Location     Type
  2803 ;;                  1    wreg      void 
  2804 ;; Registers used:
  2805 ;;		wreg, status,2, status,0
  2806 ;; Tracked objects:
  2807 ;;		On entry : 0/0
  2808 ;;		On exit  : 0/0
  2809 ;;		Unchanged: 0/0
  2810 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2811 ;;      Params:         0       0       0       0       0
  2812 ;;      Locals:         0       0       0       0       0
  2813 ;;      Temps:          0       0       0       0       0
  2814 ;;      Totals:         0       0       0       0       0
  2815 ;;Total ram usage:        0 bytes
  2816 ;; Hardware stack levels used:    1
  2817 ;; This function calls:
  2818 ;;		Nothing
  2819 ;; This function is called by:
  2820 ;;		_SendByte
  2821 ;; This function uses a non-reentrant model
  2822 ;;
  2823                           
  2824                           
  2825                           ;psect for function _flipout
  2826  04EC                     _flipout:	
  2827                           
  2828                           ;encode_AX25.c: 126: estuff = 0;
  2829                           
  2830                           ;incstack = 0
  2831                           ; Regs used in _flipout: [wreg+status,2+status,0]
  2832  04EC  1283               	bcf	3,5	;RP0=0, select bank0
  2833  04ED  1303               	bcf	3,6	;RP1=0, select bank0
  2834  04EE  01DB               	clrf	_estuff
  2835  04EF  01DC               	clrf	_estuff+1
  2836                           
  2837                           ;encode_AX25.c: 127: if(ebitstatus == 0){
  2838  04F0  0859               	movf	_ebitstatus,w
  2839  04F1  045A               	iorwf	_ebitstatus+1,w
  2840  04F2  1D03               	btfss	3,2
  2841  04F3  2CFA               	goto	i1l190
  2842                           
  2843                           ;encode_AX25.c: 128: RC5 = 1;
  2844  04F4  1687               	bsf	7,5	;volatile
  2845                           
  2846                           ;encode_AX25.c: 129: ebitstatus = 1;
  2847  04F5  3001               	movlw	1
  2848  04F6  00D9               	movwf	_ebitstatus
  2849  04F7  3000               	movlw	0
  2850  04F8  00DA               	movwf	_ebitstatus+1
  2851                           
  2852                           ;encode_AX25.c: 130: }else{
  2853  04F9  0008               	return
  2854  04FA                     i1l190:	
  2855                           
  2856                           ;encode_AX25.c: 131: RC5 = 0;
  2857  04FA  1287               	bcf	7,5	;volatile
  2858                           
  2859                           ;encode_AX25.c: 132: ebitstatus = 0;
  2860  04FB  01D9               	clrf	_ebitstatus
  2861  04FC  01DA               	clrf	_ebitstatus+1
  2862  04FD  0008               	return
  2863  04FE                     __end_of_flipout:	
  2864                           
  2865                           	psect	text11
  2866  04BE                     __ptext11:	
  2867 ;; *************** function _fcsbit *****************
  2868 ;; Defined at:
  2869 ;;		line 138 in file "encode_AX25.c"
  2870 ;; Parameters:    Size  Location     Type
  2871 ;;  tbyte           1    wreg     unsigned char 
  2872 ;; Auto vars:     Size  Location     Type
  2873 ;;  tbyte           1    2[COMMON] unsigned char 
  2874 ;; Return value:  Size  Location     Type
  2875 ;;                  1    wreg      void 
  2876 ;; Registers used:
  2877 ;;		wreg, status,2, status,0
  2878 ;; Tracked objects:
  2879 ;;		On entry : 0/0
  2880 ;;		On exit  : 0/0
  2881 ;;		Unchanged: 0/0
  2882 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2883 ;;      Params:         0       0       0       0       0
  2884 ;;      Locals:         1       0       0       0       0
  2885 ;;      Temps:          2       0       0       0       0
  2886 ;;      Totals:         3       0       0       0       0
  2887 ;;Total ram usage:        3 bytes
  2888 ;; Hardware stack levels used:    1
  2889 ;; This function calls:
  2890 ;;		Nothing
  2891 ;; This function is called by:
  2892 ;;		_SendByte
  2893 ;; This function uses a non-reentrant model
  2894 ;;
  2895                           
  2896                           
  2897                           ;psect for function _fcsbit
  2898  04BE                     _fcsbit:	
  2899                           
  2900                           ;incstack = 0
  2901                           ; Regs used in _fcsbit: [wreg+status,2+status,0]
  2902                           ;fcsbit@tbyte stored from wreg
  2903  04BE  00F2               	movwf	fcsbit@tbyte
  2904  04BF  1003               	bcf	3,0	;# 
  2905  04C0  0CE1               	rrf	_efcshi,f	;# 
  2906  04C1  0CE2               	rrf	_efcslo,f	;# 
  2907                           
  2908                           ;encode_AX25.c: 144: if(((STATUS & 0x01)^(tbyte)) == 0x01){
  2909  04C2  3001               	movlw	1
  2910  04C3  1283               	bcf	3,5	;RP0=0, select bank0
  2911  04C4  1303               	bcf	3,6	;RP1=0, select bank0
  2912  04C5  0503               	andwf	3,w	;volatile
  2913  04C6  00F0               	movwf	??_fcsbit
  2914  04C7  0872               	movf	fcsbit@tbyte,w
  2915  04C8  0670               	xorwf	??_fcsbit,w
  2916  04C9  00F1               	movwf	??_fcsbit+1
  2917  04CA  0371               	decf	??_fcsbit+1,w
  2918  04CB  1D03               	btfss	3,2
  2919  04CC  0008               	return
  2920                           
  2921                           ;encode_AX25.c: 145: efcshi = efcshi ^ 0x84;
  2922  04CD  0861               	movf	_efcshi,w
  2923  04CE  3A84               	xorlw	132
  2924  04CF  00F0               	movwf	??_fcsbit
  2925  04D0  0870               	movf	??_fcsbit,w
  2926  04D1  00E1               	movwf	_efcshi
  2927                           
  2928                           ;encode_AX25.c: 146: efcslo = efcslo ^ 0x08;
  2929  04D2  0862               	movf	_efcslo,w
  2930  04D3  3A08               	xorlw	8
  2931  04D4  00F0               	movwf	??_fcsbit
  2932  04D5  0870               	movf	??_fcsbit,w
  2933  04D6  00E2               	movwf	_efcslo
  2934  04D7  0008               	return
  2935  04D8                     __end_of_fcsbit:	
  2936                           
  2937                           	psect	text12
  2938  01B4                     __ptext12:	
  2939 ;; *************** function _Packetmaker *****************
  2940 ;; Defined at:
  2941 ;;		line 40 in file "encode_AX25.c"
  2942 ;; Parameters:    Size  Location     Type
  2943 ;;  eDataField      1    wreg     PTR unsigned char 
  2944 ;;		 -> InterReceiver@EEPROMCmdData(1), 
  2945 ;; Auto vars:     Size  Location     Type
  2946 ;;  eDataField      1    4[COMMON] PTR unsigned char 
  2947 ;;		 -> InterReceiver@EEPROMCmdData(1), 
  2948 ;;  i               2    5[COMMON] unsigned int 
  2949 ;;  i               2   11[COMMON] unsigned int 
  2950 ;;  i               2    9[COMMON] unsigned int 
  2951 ;;  Datanum         2    7[COMMON] unsigned int 
  2952 ;; Return value:  Size  Location     Type
  2953 ;;                  2    0[COMMON] unsigned int 
  2954 ;; Registers used:
  2955 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  2956 ;; Tracked objects:
  2957 ;;		On entry : 0/0
  2958 ;;		On exit  : 0/0
  2959 ;;		Unchanged: 0/0
  2960 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2961 ;;      Params:         2       0       0       0       0
  2962 ;;      Locals:         9       0       0       0       0
  2963 ;;      Temps:          2       0       0       0       0
  2964 ;;      Totals:        13       0       0       0       0
  2965 ;;Total ram usage:       13 bytes
  2966 ;; Hardware stack levels used:    2
  2967 ;; This function calls:
  2968 ;;		Nothing
  2969 ;; This function is called by:
  2970 ;;		_SendPacket
  2971 ;; This function uses a non-reentrant model
  2972 ;;
  2973                           
  2974                           
  2975                           ;psect for function _Packetmaker
  2976  01B4                     _Packetmaker:	
  2977                           
  2978                           ;incstack = 0
  2979                           ; Regs used in _Packetmaker: [wreg-fsr0h+status,2+status,0+pclath]
  2980                           ;Packetmaker@eDataField stored from wreg
  2981  01B4  00F4               	movwf	Packetmaker@eDataField
  2982                           
  2983                           ;encode_AX25.c: 41: for(UINT i=0;i<6;i++){
  2984  01B5  01F9               	clrf	Packetmaker@i
  2985  01B6  01FA               	clrf	Packetmaker@i+1
  2986  01B7  3000               	movlw	0
  2987  01B8  027A               	subwf	Packetmaker@i+1,w
  2988  01B9  3006               	movlw	6
  2989  01BA  1903               	skipnz
  2990  01BB  0279               	subwf	Packetmaker@i,w
  2991  01BC  1803               	btfsc	3,0
  2992  01BD  29DC               	goto	i1l1225
  2993  01BE                     i1l1219:	
  2994                           
  2995                           ;encode_AX25.c: 42: ePacket[i] = "JQ1ZHX"[i] << 1;
  2996  01BE  0879               	movf	Packetmaker@i,w
  2997  01BF  3E01               	addlw	low ((STR_1-__stringbase)| (0+32768))
  2998  01C0  0084               	movwf	4
  2999  01C1  120A  118A  24D8  120A  118A  	fcall	stringdir
  3000  01C6  00F2               	movwf	??_Packetmaker
  3001  01C7  0772               	addwf	??_Packetmaker,w
  3002  01C8  00F3               	movwf	??_Packetmaker+1
  3003  01C9  0879               	movf	Packetmaker@i,w
  3004  01CA  3E90               	addlw	(low (_ePacket| (0+256)))& (0+255)
  3005  01CB  0084               	movwf	4
  3006  01CC  0873               	movf	??_Packetmaker+1,w
  3007  01CD  1783               	bsf	3,7	;select IRP bank3
  3008  01CE  0080               	movwf	0
  3009  01CF  3001               	movlw	1
  3010  01D0  07F9               	addwf	Packetmaker@i,f
  3011  01D1  1803               	skipnc
  3012  01D2  0AFA               	incf	Packetmaker@i+1,f
  3013  01D3  3000               	movlw	0
  3014  01D4  07FA               	addwf	Packetmaker@i+1,f
  3015  01D5  3000               	movlw	0
  3016  01D6  027A               	subwf	Packetmaker@i+1,w
  3017  01D7  3006               	movlw	6
  3018  01D8  1903               	skipnz
  3019  01D9  0279               	subwf	Packetmaker@i,w
  3020  01DA  1C03               	skipc
  3021  01DB  29BE               	goto	i1l1219
  3022  01DC                     i1l1225:	
  3023                           
  3024                           ;encode_AX25.c: 43: }
  3025                           ;encode_AX25.c: 44: ePacket[6] = 0x60;
  3026  01DC  3060               	movlw	96
  3027  01DD  00F2               	movwf	??_Packetmaker
  3028  01DE  0872               	movf	??_Packetmaker,w
  3029  01DF  1683               	bsf	3,5	;RP0=1, select bank3
  3030  01E0  1703               	bsf	3,6	;RP1=1, select bank3
  3031  01E1  0096               	movwf	(_ePacket^(0+384)+6)
  3032                           
  3033                           ;encode_AX25.c: 45: for(UINT i=0;i<6;i++){
  3034  01E2  01FB               	clrf	Packetmaker@i_132
  3035  01E3  01FC               	clrf	Packetmaker@i_132+1
  3036  01E4  3000               	movlw	0
  3037  01E5  027C               	subwf	Packetmaker@i_132+1,w
  3038  01E6  3006               	movlw	6
  3039  01E7  1903               	skipnz
  3040  01E8  027B               	subwf	Packetmaker@i_132,w
  3041  01E9  1803               	btfsc	3,0
  3042  01EA  2A0A               	goto	i1l1239
  3043  01EB                     i1l1233:	
  3044                           
  3045                           ;encode_AX25.c: 46: ePacket[i+7] = "JQ1YCZ"[i] << 1;
  3046  01EB  087B               	movf	Packetmaker@i_132,w
  3047  01EC  3E08               	addlw	low ((STR_2-__stringbase)| (0+32768))
  3048  01ED  0084               	movwf	4
  3049  01EE  120A  118A  24D8  120A  118A  	fcall	stringdir
  3050  01F3  00F2               	movwf	??_Packetmaker
  3051  01F4  0772               	addwf	??_Packetmaker,w
  3052  01F5  00F3               	movwf	??_Packetmaker+1
  3053  01F6  087B               	movf	Packetmaker@i_132,w
  3054  01F7  3E07               	addlw	7
  3055  01F8  3E90               	addlw	(low (_ePacket| (0+256)))& (0+255)
  3056  01F9  0084               	movwf	4
  3057  01FA  0873               	movf	??_Packetmaker+1,w
  3058  01FB  1783               	bsf	3,7	;select IRP bank3
  3059  01FC  0080               	movwf	0
  3060  01FD  3001               	movlw	1
  3061  01FE  07FB               	addwf	Packetmaker@i_132,f
  3062  01FF  1803               	skipnc
  3063  0200  0AFC               	incf	Packetmaker@i_132+1,f
  3064  0201  3000               	movlw	0
  3065  0202  07FC               	addwf	Packetmaker@i_132+1,f
  3066  0203  3000               	movlw	0
  3067  0204  027C               	subwf	Packetmaker@i_132+1,w
  3068  0205  3006               	movlw	6
  3069  0206  1903               	skipnz
  3070  0207  027B               	subwf	Packetmaker@i_132,w
  3071  0208  1C03               	skipc
  3072  0209  29EB               	goto	i1l1233
  3073  020A                     i1l1239:	
  3074                           
  3075                           ;encode_AX25.c: 47: }
  3076                           ;encode_AX25.c: 48: ePacket[13] = 0xe1;
  3077  020A  30E1               	movlw	225
  3078  020B  00F2               	movwf	??_Packetmaker
  3079  020C  0872               	movf	??_Packetmaker,w
  3080  020D  1683               	bsf	3,5	;RP0=1, select bank3
  3081  020E  1703               	bsf	3,6	;RP1=1, select bank3
  3082  020F  009D               	movwf	(_ePacket^(0+384)+13)
  3083                           
  3084                           ;encode_AX25.c: 49: ePacket[14] = 0x03;
  3085  0210  3003               	movlw	3
  3086  0211  00F2               	movwf	??_Packetmaker
  3087  0212  0872               	movf	??_Packetmaker,w
  3088  0213  009E               	movwf	(_ePacket^(0+384)+14)
  3089                           
  3090                           ;encode_AX25.c: 50: ePacket[15] = 0xf0;
  3091  0214  30F0               	movlw	240
  3092  0215  00F2               	movwf	??_Packetmaker
  3093  0216  0872               	movf	??_Packetmaker,w
  3094  0217  009F               	movwf	(_ePacket^(0+384)+15)
  3095                           
  3096                           ;encode_AX25.c: 51: UINT Datanum = 0;
  3097  0218  01F7               	clrf	Packetmaker@Datanum
  3098  0219  01F8               	clrf	Packetmaker@Datanum+1
  3099                           
  3100                           ;encode_AX25.c: 52: for(Datanum=0;eDataField[Datanum] != '\0';Datanum++);
  3101  021A  01F7               	clrf	Packetmaker@Datanum
  3102  021B  01F8               	clrf	Packetmaker@Datanum+1
  3103  021C                     i1l1247:	
  3104  021C  0877               	movf	Packetmaker@Datanum,w
  3105  021D  0774               	addwf	Packetmaker@eDataField,w
  3106  021E  00F2               	movwf	??_Packetmaker
  3107  021F  0872               	movf	??_Packetmaker,w
  3108  0220  0084               	movwf	4
  3109  0221  1383               	bcf	3,7	;select IRP bank0
  3110  0222  0800               	movf	0,w
  3111  0223  1903               	btfsc	3,2
  3112  0224  2A2C               	goto	i1l1249
  3113  0225  3001               	movlw	1
  3114  0226  07F7               	addwf	Packetmaker@Datanum,f
  3115  0227  1803               	skipnc
  3116  0228  0AF8               	incf	Packetmaker@Datanum+1,f
  3117  0229  3000               	movlw	0
  3118  022A  07F8               	addwf	Packetmaker@Datanum+1,f
  3119  022B  2A1C               	goto	i1l1247
  3120  022C                     i1l1249:	
  3121                           
  3122                           ;encode_AX25.c: 53: for(UINT i=0;i<Datanum;i++){
  3123  022C  01F5               	clrf	Packetmaker@i_135
  3124  022D  01F6               	clrf	Packetmaker@i_135+1
  3125  022E                     i1l1255:	
  3126  022E  0878               	movf	Packetmaker@Datanum+1,w
  3127  022F  0276               	subwf	Packetmaker@i_135+1,w
  3128  0230  1D03               	skipz
  3129  0231  2A34               	goto	u59_25
  3130  0232  0877               	movf	Packetmaker@Datanum,w
  3131  0233  0275               	subwf	Packetmaker@i_135,w
  3132  0234                     u59_25:	
  3133  0234  1803               	btfsc	3,0
  3134  0235  2A4C               	goto	i1l1257
  3135                           
  3136                           ;encode_AX25.c: 54: ePacket[16+i] = eDataField[i];
  3137  0236  0875               	movf	Packetmaker@i_135,w
  3138  0237  0774               	addwf	Packetmaker@eDataField,w
  3139  0238  00F2               	movwf	??_Packetmaker
  3140  0239  0872               	movf	??_Packetmaker,w
  3141  023A  0084               	movwf	4
  3142  023B  1383               	bcf	3,7	;select IRP bank0
  3143  023C  0800               	movf	0,w
  3144  023D  00F3               	movwf	??_Packetmaker+1
  3145  023E  0875               	movf	Packetmaker@i_135,w
  3146  023F  3E10               	addlw	16
  3147  0240  3E90               	addlw	(low (_ePacket| (0+256)))& (0+255)
  3148  0241  0084               	movwf	4
  3149  0242  0873               	movf	??_Packetmaker+1,w
  3150  0243  1783               	bsf	3,7	;select IRP bank3
  3151  0244  0080               	movwf	0
  3152  0245  3001               	movlw	1
  3153  0246  07F5               	addwf	Packetmaker@i_135,f
  3154  0247  1803               	skipnc
  3155  0248  0AF6               	incf	Packetmaker@i_135+1,f
  3156  0249  3000               	movlw	0
  3157  024A  07F6               	addwf	Packetmaker@i_135+1,f
  3158  024B  2A2E               	goto	i1l1255
  3159  024C                     i1l1257:	
  3160                           
  3161                           ;encode_AX25.c: 55: }
  3162                           ;encode_AX25.c: 56: return 16+Datanum;
  3163  024C  0877               	movf	Packetmaker@Datanum,w
  3164  024D  3E10               	addlw	16
  3165  024E  00F0               	movwf	?_Packetmaker
  3166  024F  0878               	movf	Packetmaker@Datanum+1,w
  3167  0250  1803               	skipnc
  3168  0251  3E01               	addlw	1
  3169  0252  3E00               	addlw	0
  3170  0253  00F1               	movwf	?_Packetmaker+1
  3171  0254  0008               	return
  3172  0255                     __end_of_Packetmaker:	
  3173                           
  3174                           	psect	text13
  3175  0104                     __ptext13:	
  3176 ;; *************** function _EEPROM_Read *****************
  3177 ;; Defined at:
  3178 ;;		line 77 in file "I2C.c"
  3179 ;; Parameters:    Size  Location     Type
  3180 ;;  EEPROM_addre    1    wreg     unsigned char 
  3181 ;;  high_address    1    3[COMMON] unsigned char 
  3182 ;;  low_address     1    4[COMMON] unsigned char 
  3183 ;;  ReadData        1    5[COMMON] PTR unsigned char 
  3184 ;;		 -> InterReceiver@EEPROMCmdData(1), 
  3185 ;;  EEPROMDataLe    1    6[COMMON] PTR unsigned int 
  3186 ;;		 -> InterReceiver@EEPROMCmdDataLength(2), 
  3187 ;; Auto vars:     Size  Location     Type
  3188 ;;  EEPROM_addre    1    0[BANK0 ] unsigned char 
  3189 ;;  i               2    2[BANK0 ] unsigned int 
  3190 ;;  Address         1    4[BANK0 ] unsigned char 
  3191 ;;  ReadAddress     1    1[BANK0 ] unsigned char 
  3192 ;; Return value:  Size  Location     Type
  3193 ;;                  1    wreg      void 
  3194 ;; Registers used:
  3195 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3196 ;; Tracked objects:
  3197 ;;		On entry : 0/0
  3198 ;;		On exit  : 0/0
  3199 ;;		Unchanged: 0/0
  3200 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3201 ;;      Params:         4       0       0       0       0
  3202 ;;      Locals:         0       5       0       0       0
  3203 ;;      Temps:          3       0       0       0       0
  3204 ;;      Totals:         7       5       0       0       0
  3205 ;;Total ram usage:       12 bytes
  3206 ;; Hardware stack levels used:    1
  3207 ;; Hardware stack levels required when called:    2
  3208 ;; This function calls:
  3209 ;;		_I2C_Master_Read
  3210 ;;		_I2C_Master_RepeatedStart
  3211 ;;		_I2C_Master_Start
  3212 ;;		_I2C_Master_Stop
  3213 ;;		_I2C_Master_Write
  3214 ;; This function is called by:
  3215 ;;		_InterReceiver
  3216 ;; This function uses a non-reentrant model
  3217 ;;
  3218                           
  3219                           
  3220                           ;psect for function _EEPROM_Read
  3221  0104                     _EEPROM_Read:	
  3222                           
  3223                           ;incstack = 0
  3224                           ; Regs used in _EEPROM_Read: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3225                           ;EEPROM_Read@EEPROM_address stored from wreg
  3226  0104  1283               	bcf	3,5	;RP0=0, select bank0
  3227  0105  1303               	bcf	3,6	;RP1=0, select bank0
  3228  0106  00A0               	movwf	EEPROM_Read@EEPROM_address
  3229                           
  3230                           ;I2C.c: 78: UBYTE Address = EEPROM_address << 1;
  3231  0107  0820               	movf	EEPROM_Read@EEPROM_address,w
  3232  0108  00F7               	movwf	??_EEPROM_Read
  3233  0109  0777               	addwf	??_EEPROM_Read,w
  3234  010A  00F8               	movwf	??_EEPROM_Read+1
  3235  010B  0878               	movf	??_EEPROM_Read+1,w
  3236  010C  00A4               	movwf	EEPROM_Read@Address
  3237                           
  3238                           ;I2C.c: 79: UBYTE ReadAddress = Address | 0x01;
  3239  010D  0824               	movf	EEPROM_Read@Address,w
  3240  010E  3801               	iorlw	1
  3241  010F  00F7               	movwf	??_EEPROM_Read
  3242  0110  0877               	movf	??_EEPROM_Read,w
  3243  0111  00A1               	movwf	EEPROM_Read@ReadAddress
  3244                           
  3245                           ;I2C.c: 83: I2C_Master_Start();
  3246  0112  120A  118A  2546  120A  118A  	fcall	_I2C_Master_Start
  3247                           
  3248                           ;I2C.c: 84: I2C_Master_Write(Address);
  3249  0117  1283               	bcf	3,5	;RP0=0, select bank0
  3250  0118  1303               	bcf	3,6	;RP1=0, select bank0
  3251  0119  0824               	movf	EEPROM_Read@Address,w
  3252  011A  00F7               	movwf	??_EEPROM_Read
  3253  011B  01F8               	clrf	??_EEPROM_Read+1
  3254  011C  0877               	movf	??_EEPROM_Read,w
  3255  011D  00F0               	movwf	I2C_Master_Write@d
  3256  011E  0878               	movf	??_EEPROM_Read+1,w
  3257  011F  00F1               	movwf	I2C_Master_Write@d+1
  3258  0120  120A  118A  2537  120A  118A  	fcall	_I2C_Master_Write
  3259                           
  3260                           ;I2C.c: 85: I2C_Master_Write(high_address);
  3261  0125  0873               	movf	EEPROM_Read@high_address,w
  3262  0126  00F7               	movwf	??_EEPROM_Read
  3263  0127  01F8               	clrf	??_EEPROM_Read+1
  3264  0128  0877               	movf	??_EEPROM_Read,w
  3265  0129  00F0               	movwf	I2C_Master_Write@d
  3266  012A  0878               	movf	??_EEPROM_Read+1,w
  3267  012B  00F1               	movwf	I2C_Master_Write@d+1
  3268  012C  120A  118A  2537  120A  118A  	fcall	_I2C_Master_Write
  3269                           
  3270                           ;I2C.c: 86: I2C_Master_Write(low_address);
  3271  0131  0874               	movf	EEPROM_Read@low_address,w
  3272  0132  00F7               	movwf	??_EEPROM_Read
  3273  0133  01F8               	clrf	??_EEPROM_Read+1
  3274  0134  0877               	movf	??_EEPROM_Read,w
  3275  0135  00F0               	movwf	I2C_Master_Write@d
  3276  0136  0878               	movf	??_EEPROM_Read+1,w
  3277  0137  00F1               	movwf	I2C_Master_Write@d+1
  3278  0138  120A  118A  2537  120A  118A  	fcall	_I2C_Master_Write
  3279                           
  3280                           ;I2C.c: 87: I2C_Master_RepeatedStart();
  3281  013D  120A  118A  254D  120A  118A  	fcall	_I2C_Master_RepeatedStart
  3282                           
  3283                           ;I2C.c: 90: I2C_Master_Write(ReadAddress);
  3284  0142  1283               	bcf	3,5	;RP0=0, select bank0
  3285  0143  1303               	bcf	3,6	;RP1=0, select bank0
  3286  0144  0821               	movf	EEPROM_Read@ReadAddress,w
  3287  0145  00F7               	movwf	??_EEPROM_Read
  3288  0146  01F8               	clrf	??_EEPROM_Read+1
  3289  0147  0877               	movf	??_EEPROM_Read,w
  3290  0148  00F0               	movwf	I2C_Master_Write@d
  3291  0149  0878               	movf	??_EEPROM_Read+1,w
  3292  014A  00F1               	movwf	I2C_Master_Write@d+1
  3293  014B  120A  118A  2537  120A  118A  	fcall	_I2C_Master_Write
  3294                           
  3295                           ;I2C.c: 92: for (*EEPROMDataLength = 0; ReadData[*EEPROMDataLength]!= 0x00; *EEPROMDataL
      +                          ength++);
  3296  0150  0876               	movf	EEPROM_Read@EEPROMDataLength,w
  3297  0151  0084               	movwf	4
  3298  0152  1383               	bcf	3,7	;select IRP bank0
  3299  0153  0180               	clrf	0
  3300  0154  0A84               	incf	4,f
  3301  0155  0180               	clrf	0
  3302  0156                     i1l1415:	
  3303  0156  0876               	movf	EEPROM_Read@EEPROMDataLength,w
  3304  0157  0084               	movwf	4
  3305  0158  0800               	movf	0,w
  3306  0159  0775               	addwf	EEPROM_Read@ReadData,w
  3307  015A  00F7               	movwf	??_EEPROM_Read
  3308  015B  0877               	movf	??_EEPROM_Read,w
  3309  015C  0084               	movwf	4
  3310  015D  0800               	movf	0,w
  3311  015E  1903               	btfsc	3,2
  3312  015F  2965               	goto	i1l1417
  3313  0160  3002               	movlw	2
  3314  0161  00F7               	movwf	??_EEPROM_Read
  3315  0162  0877               	movf	??_EEPROM_Read,w
  3316  0163  07F6               	addwf	EEPROM_Read@EEPROMDataLength,f
  3317  0164  2956               	goto	i1l1415
  3318  0165                     i1l1417:	
  3319                           
  3320                           ;I2C.c: 95: for(UINT i = 0; i < *EEPROMDataLength; i++){
  3321  0165  1283               	bcf	3,5	;RP0=0, select bank0
  3322  0166  1303               	bcf	3,6	;RP1=0, select bank0
  3323  0167  01A2               	clrf	EEPROM_Read@i
  3324  0168  01A3               	clrf	EEPROM_Read@i+1
  3325  0169                     i1l1423:	
  3326  0169  0876               	movf	EEPROM_Read@EEPROMDataLength,w
  3327  016A  0084               	movwf	4
  3328  016B  0800               	movf	0,w
  3329  016C  00F7               	movwf	??_EEPROM_Read
  3330  016D  0A84               	incf	4,f
  3331  016E  0800               	movf	0,w
  3332  016F  00F8               	movwf	??_EEPROM_Read+1
  3333  0170  0878               	movf	??_EEPROM_Read+1,w
  3334  0171  0223               	subwf	EEPROM_Read@i+1,w
  3335  0172  1D03               	skipz
  3336  0173  2976               	goto	u81_25
  3337  0174  0877               	movf	??_EEPROM_Read,w
  3338  0175  0222               	subwf	EEPROM_Read@i,w
  3339  0176                     u81_25:	
  3340  0176  1803               	btfsc	3,0
  3341  0177  2990               	goto	i1l1425
  3342                           
  3343                           ;I2C.c: 99: ReadData[i] = I2C_Master_Read(1);
  3344  0178  3001               	movlw	1
  3345  0179  120A  118A  2445  120A  118A  	fcall	_I2C_Master_Read
  3346  017E  00F7               	movwf	??_EEPROM_Read
  3347  017F  1283               	bcf	3,5	;RP0=0, select bank0
  3348  0180  1303               	bcf	3,6	;RP1=0, select bank0
  3349  0181  0822               	movf	EEPROM_Read@i,w
  3350  0182  0775               	addwf	EEPROM_Read@ReadData,w
  3351  0183  00F8               	movwf	??_EEPROM_Read+1
  3352  0184  0878               	movf	??_EEPROM_Read+1,w
  3353  0185  0084               	movwf	4
  3354  0186  0877               	movf	??_EEPROM_Read,w
  3355  0187  1383               	bcf	3,7	;select IRP bank0
  3356  0188  0080               	movwf	0
  3357  0189  3001               	movlw	1
  3358  018A  07A2               	addwf	EEPROM_Read@i,f
  3359  018B  1803               	skipnc
  3360  018C  0AA3               	incf	EEPROM_Read@i+1,f
  3361  018D  3000               	movlw	0
  3362  018E  07A3               	addwf	EEPROM_Read@i+1,f
  3363  018F  2969               	goto	i1l1423
  3364  0190                     i1l1425:	
  3365                           
  3366                           ;I2C.c: 101: }
  3367                           ;I2C.c: 102: ReadData[*EEPROMDataLength] = I2C_Master_Read(0);
  3368  0190  3000               	movlw	0
  3369  0191  120A  118A  2445  120A  118A  	fcall	_I2C_Master_Read
  3370  0196  00F7               	movwf	??_EEPROM_Read
  3371  0197  0876               	movf	EEPROM_Read@EEPROMDataLength,w
  3372  0198  0084               	movwf	4
  3373  0199  1383               	bcf	3,7	;select IRP bank0
  3374  019A  0800               	movf	0,w
  3375  019B  0775               	addwf	EEPROM_Read@ReadData,w
  3376  019C  00F8               	movwf	??_EEPROM_Read+1
  3377  019D  0878               	movf	??_EEPROM_Read+1,w
  3378  019E  0084               	movwf	4
  3379  019F  0877               	movf	??_EEPROM_Read,w
  3380  01A0  0080               	movwf	0
  3381                           
  3382                           ;I2C.c: 104: I2C_Master_Stop();
  3383  01A1  120A  118A  253F  120A  118A  	fcall	_I2C_Master_Stop
  3384                           
  3385                           ;I2C.c: 113: _delay((unsigned long)((200)*(10000000/4000.0)));
  3386  01A6  3003               	movlw	3
  3387  01A7  00F9               	movwf	??_EEPROM_Read+2
  3388  01A8  308A               	movlw	138
  3389  01A9  00F8               	movwf	??_EEPROM_Read+1
  3390  01AA  3055               	movlw	85
  3391  01AB  00F7               	movwf	??_EEPROM_Read
  3392  01AC                     u107_27:	
  3393  01AC  0BF7               	decfsz	??_EEPROM_Read,f
  3394  01AD  29AC               	goto	u107_27
  3395  01AE  0BF8               	decfsz	??_EEPROM_Read+1,f
  3396  01AF  29AC               	goto	u107_27
  3397  01B0  0BF9               	decfsz	??_EEPROM_Read+2,f
  3398  01B1  29AC               	goto	u107_27
  3399  01B2  29B3               	nop2
  3400  01B3  0008               	return
  3401  01B4                     __end_of_EEPROM_Read:	
  3402                           
  3403                           	psect	text14
  3404  0537                     __ptext14:	
  3405 ;; *************** function _I2C_Master_Write *****************
  3406 ;; Defined at:
  3407 ;;		line 37 in file "I2C.c"
  3408 ;; Parameters:    Size  Location     Type
  3409 ;;  d               2    0[COMMON] unsigned int 
  3410 ;; Auto vars:     Size  Location     Type
  3411 ;;		None
  3412 ;; Return value:  Size  Location     Type
  3413 ;;                  1    wreg      void 
  3414 ;; Registers used:
  3415 ;;		wreg, status,2, status,0, pclath, cstack
  3416 ;; Tracked objects:
  3417 ;;		On entry : 0/0
  3418 ;;		On exit  : 0/0
  3419 ;;		Unchanged: 0/0
  3420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3421 ;;      Params:         2       0       0       0       0
  3422 ;;      Locals:         0       0       0       0       0
  3423 ;;      Temps:          0       0       0       0       0
  3424 ;;      Totals:         2       0       0       0       0
  3425 ;;Total ram usage:        2 bytes
  3426 ;; Hardware stack levels used:    1
  3427 ;; Hardware stack levels required when called:    1
  3428 ;; This function calls:
  3429 ;;		_I2C_Master_Wait
  3430 ;; This function is called by:
  3431 ;;		_EEPROM_Read
  3432 ;;		_EEPROM_Write
  3433 ;; This function uses a non-reentrant model
  3434 ;;
  3435                           
  3436                           
  3437                           ;psect for function _I2C_Master_Write
  3438  0537                     _I2C_Master_Write:	
  3439                           
  3440                           ;I2C.c: 38: I2C_Master_Wait();
  3441                           
  3442                           ;incstack = 0
  3443                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  3444  0537  120A  118A  251E   	fcall	_I2C_Master_Wait
  3445                           
  3446                           ;I2C.c: 39: SSPBUF = d;
  3447  053A  0870               	movf	I2C_Master_Write@d,w
  3448  053B  1283               	bcf	3,5	;RP0=0, select bank0
  3449  053C  1303               	bcf	3,6	;RP1=0, select bank0
  3450  053D  0093               	movwf	19	;volatile
  3451  053E  0008               	return
  3452  053F                     __end_of_I2C_Master_Write:	
  3453                           
  3454                           	psect	text15
  3455  053F                     __ptext15:	
  3456 ;; *************** function _I2C_Master_Stop *****************
  3457 ;; Defined at:
  3458 ;;		line 32 in file "I2C.c"
  3459 ;; Parameters:    Size  Location     Type
  3460 ;;		None
  3461 ;; Auto vars:     Size  Location     Type
  3462 ;;		None
  3463 ;; Return value:  Size  Location     Type
  3464 ;;                  1    wreg      void 
  3465 ;; Registers used:
  3466 ;;		wreg, status,2, status,0, pclath, cstack
  3467 ;; Tracked objects:
  3468 ;;		On entry : 0/0
  3469 ;;		On exit  : 0/0
  3470 ;;		Unchanged: 0/0
  3471 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3472 ;;      Params:         0       0       0       0       0
  3473 ;;      Locals:         0       0       0       0       0
  3474 ;;      Temps:          0       0       0       0       0
  3475 ;;      Totals:         0       0       0       0       0
  3476 ;;Total ram usage:        0 bytes
  3477 ;; Hardware stack levels used:    1
  3478 ;; Hardware stack levels required when called:    1
  3479 ;; This function calls:
  3480 ;;		_I2C_Master_Wait
  3481 ;; This function is called by:
  3482 ;;		_EEPROM_Read
  3483 ;;		_EEPROM_Write
  3484 ;; This function uses a non-reentrant model
  3485 ;;
  3486                           
  3487                           
  3488                           ;psect for function _I2C_Master_Stop
  3489  053F                     _I2C_Master_Stop:	
  3490                           
  3491                           ;I2C.c: 33: I2C_Master_Wait();
  3492                           
  3493                           ;incstack = 0
  3494                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  3495  053F  120A  118A  251E   	fcall	_I2C_Master_Wait
  3496                           
  3497                           ;I2C.c: 34: PEN = 1;
  3498  0542  1683               	bsf	3,5	;RP0=1, select bank1
  3499  0543  1303               	bcf	3,6	;RP1=0, select bank1
  3500  0544  1511               	bsf	17,2	;volatile
  3501  0545  0008               	return
  3502  0546                     __end_of_I2C_Master_Stop:	
  3503                           
  3504                           	psect	text16
  3505  0546                     __ptext16:	
  3506 ;; *************** function _I2C_Master_Start *****************
  3507 ;; Defined at:
  3508 ;;		line 22 in file "I2C.c"
  3509 ;; Parameters:    Size  Location     Type
  3510 ;;		None
  3511 ;; Auto vars:     Size  Location     Type
  3512 ;;		None
  3513 ;; Return value:  Size  Location     Type
  3514 ;;                  1    wreg      void 
  3515 ;; Registers used:
  3516 ;;		wreg, status,2, status,0, pclath, cstack
  3517 ;; Tracked objects:
  3518 ;;		On entry : 0/0
  3519 ;;		On exit  : 0/0
  3520 ;;		Unchanged: 0/0
  3521 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3522 ;;      Params:         0       0       0       0       0
  3523 ;;      Locals:         0       0       0       0       0
  3524 ;;      Temps:          0       0       0       0       0
  3525 ;;      Totals:         0       0       0       0       0
  3526 ;;Total ram usage:        0 bytes
  3527 ;; Hardware stack levels used:    1
  3528 ;; Hardware stack levels required when called:    1
  3529 ;; This function calls:
  3530 ;;		_I2C_Master_Wait
  3531 ;; This function is called by:
  3532 ;;		_EEPROM_Read
  3533 ;;		_EEPROM_Write
  3534 ;; This function uses a non-reentrant model
  3535 ;;
  3536                           
  3537                           
  3538                           ;psect for function _I2C_Master_Start
  3539  0546                     _I2C_Master_Start:	
  3540                           
  3541                           ;I2C.c: 23: I2C_Master_Wait();
  3542                           
  3543                           ;incstack = 0
  3544                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  3545  0546  120A  118A  251E   	fcall	_I2C_Master_Wait
  3546                           
  3547                           ;I2C.c: 24: SEN = 1;
  3548  0549  1683               	bsf	3,5	;RP0=1, select bank1
  3549  054A  1303               	bcf	3,6	;RP1=0, select bank1
  3550  054B  1411               	bsf	17,0	;volatile
  3551  054C  0008               	return
  3552  054D                     __end_of_I2C_Master_Start:	
  3553                           
  3554                           	psect	text17
  3555  054D                     __ptext17:	
  3556 ;; *************** function _I2C_Master_RepeatedStart *****************
  3557 ;; Defined at:
  3558 ;;		line 27 in file "I2C.c"
  3559 ;; Parameters:    Size  Location     Type
  3560 ;;		None
  3561 ;; Auto vars:     Size  Location     Type
  3562 ;;		None
  3563 ;; Return value:  Size  Location     Type
  3564 ;;                  1    wreg      void 
  3565 ;; Registers used:
  3566 ;;		wreg, status,2, status,0, pclath, cstack
  3567 ;; Tracked objects:
  3568 ;;		On entry : 0/0
  3569 ;;		On exit  : 0/0
  3570 ;;		Unchanged: 0/0
  3571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3572 ;;      Params:         0       0       0       0       0
  3573 ;;      Locals:         0       0       0       0       0
  3574 ;;      Temps:          0       0       0       0       0
  3575 ;;      Totals:         0       0       0       0       0
  3576 ;;Total ram usage:        0 bytes
  3577 ;; Hardware stack levels used:    1
  3578 ;; Hardware stack levels required when called:    1
  3579 ;; This function calls:
  3580 ;;		_I2C_Master_Wait
  3581 ;; This function is called by:
  3582 ;;		_EEPROM_Read
  3583 ;; This function uses a non-reentrant model
  3584 ;;
  3585                           
  3586                           
  3587                           ;psect for function _I2C_Master_RepeatedStart
  3588  054D                     _I2C_Master_RepeatedStart:	
  3589                           
  3590                           ;I2C.c: 28: I2C_Master_Wait();
  3591                           
  3592                           ;incstack = 0
  3593                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
  3594  054D  120A  118A  251E   	fcall	_I2C_Master_Wait
  3595                           
  3596                           ;I2C.c: 29: RSEN = 1;
  3597  0550  1683               	bsf	3,5	;RP0=1, select bank1
  3598  0551  1303               	bcf	3,6	;RP1=0, select bank1
  3599  0552  1491               	bsf	17,1	;volatile
  3600  0553  0008               	return
  3601  0554                     __end_of_I2C_Master_RepeatedStart:	
  3602                           
  3603                           	psect	text18
  3604  0445                     __ptext18:	
  3605 ;; *************** function _I2C_Master_Read *****************
  3606 ;; Defined at:
  3607 ;;		line 42 in file "I2C.c"
  3608 ;; Parameters:    Size  Location     Type
  3609 ;;  a               1    wreg     unsigned char 
  3610 ;; Auto vars:     Size  Location     Type
  3611 ;;  a               1    1[COMMON] unsigned char 
  3612 ;;  temp            1    2[COMMON] unsigned char 
  3613 ;; Return value:  Size  Location     Type
  3614 ;;                  1    wreg      unsigned char 
  3615 ;; Registers used:
  3616 ;;		wreg, status,2, status,0, pclath, cstack
  3617 ;; Tracked objects:
  3618 ;;		On entry : 0/0
  3619 ;;		On exit  : 0/0
  3620 ;;		Unchanged: 0/0
  3621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3622 ;;      Params:         0       0       0       0       0
  3623 ;;      Locals:         2       0       0       0       0
  3624 ;;      Temps:          1       0       0       0       0
  3625 ;;      Totals:         3       0       0       0       0
  3626 ;;Total ram usage:        3 bytes
  3627 ;; Hardware stack levels used:    1
  3628 ;; Hardware stack levels required when called:    1
  3629 ;; This function calls:
  3630 ;;		_I2C_Master_Wait
  3631 ;; This function is called by:
  3632 ;;		_EEPROM_Read
  3633 ;; This function uses a non-reentrant model
  3634 ;;
  3635                           
  3636                           
  3637                           ;psect for function _I2C_Master_Read
  3638  0445                     _I2C_Master_Read:	
  3639                           
  3640                           ;incstack = 0
  3641                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  3642                           ;I2C_Master_Read@a stored from wreg
  3643  0445  00F1               	movwf	I2C_Master_Read@a
  3644                           
  3645                           ;I2C.c: 43: unsigned char temp;
  3646                           ;I2C.c: 45: I2C_Master_Wait();
  3647  0446  120A  118A  251E  120A  118A  	fcall	_I2C_Master_Wait
  3648                           
  3649                           ;I2C.c: 46: RCEN = 1;
  3650  044B  1683               	bsf	3,5	;RP0=1, select bank1
  3651  044C  1303               	bcf	3,6	;RP1=0, select bank1
  3652  044D  1591               	bsf	17,3	;volatile
  3653                           
  3654                           ;I2C.c: 47: I2C_Master_Wait();
  3655  044E  120A  118A  251E  120A  118A  	fcall	_I2C_Master_Wait
  3656                           
  3657                           ;I2C.c: 48: temp = SSPBUF;
  3658  0453  1283               	bcf	3,5	;RP0=0, select bank0
  3659  0454  1303               	bcf	3,6	;RP1=0, select bank0
  3660  0455  0813               	movf	19,w	;volatile
  3661  0456  00F0               	movwf	??_I2C_Master_Read
  3662  0457  0870               	movf	??_I2C_Master_Read,w
  3663  0458  00F2               	movwf	I2C_Master_Read@temp
  3664                           
  3665                           ;I2C.c: 50: I2C_Master_Wait();
  3666  0459  120A  118A  251E  120A  118A  	fcall	_I2C_Master_Wait
  3667                           
  3668                           ;I2C.c: 51: ACKDT = (a)?0:1;
  3669  045E  0871               	movf	I2C_Master_Read@a,w
  3670  045F  1D03               	btfss	3,2
  3671  0460  2C65               	goto	u67_20
  3672  0461  1683               	bsf	3,5	;RP0=1, select bank1
  3673  0462  1303               	bcf	3,6	;RP1=0, select bank1
  3674  0463  1691               	bsf	17,5	;volatile
  3675  0464  2C68               	goto	i1l1323
  3676  0465                     u67_20:	
  3677  0465  1683               	bsf	3,5	;RP0=1, select bank1
  3678  0466  1303               	bcf	3,6	;RP1=0, select bank1
  3679  0467  1291               	bcf	17,5	;volatile
  3680  0468                     i1l1323:	
  3681                           
  3682                           ;I2C.c: 52: ACKEN = 1;
  3683  0468  1611               	bsf	17,4	;volatile
  3684                           
  3685                           ;I2C.c: 53: return temp;
  3686  0469  0872               	movf	I2C_Master_Read@temp,w
  3687  046A  0008               	return
  3688  046B                     __end_of_I2C_Master_Read:	
  3689                           
  3690                           	psect	text19
  3691  051E                     __ptext19:	
  3692 ;; *************** function _I2C_Master_Wait *****************
  3693 ;; Defined at:
  3694 ;;		line 18 in file "I2C.c"
  3695 ;; Parameters:    Size  Location     Type
  3696 ;;		None
  3697 ;; Auto vars:     Size  Location     Type
  3698 ;;		None
  3699 ;; Return value:  Size  Location     Type
  3700 ;;                  1    wreg      void 
  3701 ;; Registers used:
  3702 ;;		wreg, status,2
  3703 ;; Tracked objects:
  3704 ;;		On entry : 0/0
  3705 ;;		On exit  : 0/0
  3706 ;;		Unchanged: 0/0
  3707 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3708 ;;      Params:         0       0       0       0       0
  3709 ;;      Locals:         0       0       0       0       0
  3710 ;;      Temps:          0       0       0       0       0
  3711 ;;      Totals:         0       0       0       0       0
  3712 ;;Total ram usage:        0 bytes
  3713 ;; Hardware stack levels used:    1
  3714 ;; This function calls:
  3715 ;;		Nothing
  3716 ;; This function is called by:
  3717 ;;		_I2C_Master_Start
  3718 ;;		_I2C_Master_RepeatedStart
  3719 ;;		_I2C_Master_Stop
  3720 ;;		_I2C_Master_Write
  3721 ;;		_I2C_Master_Read
  3722 ;; This function uses a non-reentrant model
  3723 ;;
  3724                           
  3725                           
  3726                           ;psect for function _I2C_Master_Wait
  3727  051E                     _I2C_Master_Wait:	
  3728  051E                     i1l264:	
  3729                           ;I2C.c: 19: while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  3730                           
  3731                           ;incstack = 0
  3732                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  3733                           
  3734  051E  1683               	bsf	3,5	;RP0=1, select bank1
  3735  051F  1303               	bcf	3,6	;RP1=0, select bank1
  3736  0520  1914               	btfsc	20,2	;volatile
  3737  0521  2D1E               	goto	i1l264
  3738  0522  0811               	movf	17,w	;volatile
  3739  0523  391F               	andlw	31
  3740  0524  1903               	btfsc	3,2
  3741  0525  0008               	return
  3742  0526  2D1E               	goto	i1l264
  3743  0527                     __end_of_I2C_Master_Wait:	
  3744  007E                     btemp	set	126	;btemp
  3745  007E                     wtemp0	set	126


Data Sizes:
    Strings     14
    Constant    0
    Data        36
    BSS         76
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80     57      73
    BANK1            80     25      71
    BANK3            96      0      50
    BANK2            96      0       0

Pointer List with Targets:

    EEPROM_Read@ReadData	PTR unsigned char  size(1) Largest target is 1
		 -> InterReceiver@EEPROMCmdData(BANK0[1]), 

    EEPROM_Read@EEPROMDataLength	PTR unsigned int  size(1) Largest target is 2
		 -> InterReceiver@EEPROMCmdDataLength(BANK0[2]), 

    SendPacket@eDataField	PTR unsigned char  size(1) Largest target is 1
		 -> InterReceiver@EEPROMCmdData(BANK0[1]), 

    Packetmaker@eDataField	PTR unsigned char  size(1) Largest target is 1
		 -> InterReceiver@EEPROMCmdData(BANK0[1]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _InterReceiver in COMMON

    _SendPacket->_Packetmaker
    _SendByte->_fcsbit
    _EEPROM_Read->_I2C_Master_Read

Critical Paths under _main in BANK0

    None.

Critical Paths under _InterReceiver in BANK0

    _InterReceiver->_SendPacket

Critical Paths under _main in BANK1

    _main->_Init_I2C_M
    _Init_I2C_M->___lldiv

Critical Paths under _InterReceiver in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterReceiver in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterReceiver in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                39    39      0     343
                                             22 BANK1      3     3      0
                         _Init_I2C_M
                           _Init_MPU
                        _Init_SERIAL
 ---------------------------------------------------------------------------------
 (1) _Init_SERIAL                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init_MPU                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init_I2C_M                                           8     4      4     343
                                             14 BANK1      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     268
                                              0 BANK1     14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _InterReceiver                                       45    45      0    2133
                                             12 BANK0     45    45      0
                        _EEPROM_Read
                         _SendPacket
                              _getch
                              _putch
 ---------------------------------------------------------------------------------
 (4) _putch                                                1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _getch                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _SendPacket                                          12    12      0     757
                                              0 BANK0     12    12      0
                        _Packetmaker
                           _SendByte
 ---------------------------------------------------------------------------------
 (5) _SendByte                                             6     6      0     158
                                              3 COMMON     6     6      0
                             _fcsbit
                            _flipout
 ---------------------------------------------------------------------------------
 (6) _flipout                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _fcsbit                                               3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (6) _Packetmaker                                         13    11      2     388
                                              0 COMMON    13    11      2
 ---------------------------------------------------------------------------------
 (4) _EEPROM_Read                                         12     8      4    1091
                                              3 COMMON     7     3      4
                                              0 BANK0      5     5      0
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Write                                     2     0      2     499
                                              0 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Read                                      3     3      0      45
                                              0 COMMON     3     3      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (6) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Init_I2C_M
     ___lldiv
   _Init_MPU
   _Init_SERIAL

 _InterReceiver (ROOT)
   _EEPROM_Read
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_RepeatedStart
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _SendPacket
     _Packetmaker
     _SendByte
       _fcsbit
       _flipout
   _getch
   _putch

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0      32       9       52.1%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     19      47       7       88.8%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     39      49       5       91.3%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      D       D       1       92.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      CF      12        0.0%
ABS                  0      0      CF       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sat Sep 01 17:24:59 2018

                                pc 0002                        __CFG_CP$OFF 0000  
                               fsr 0004                                _GIE 005F  
                              _RB1 0031                                _RC0 0038  
                              _RB3 0033                                _RC2 003A  
                              _RC5 003D                                _PEN 048A  
                     __CFG_CPD$OFF 0000                                u705 0371  
                              _SEN 0488                                u725 037F  
                              u735 0394                                u745 03A6  
                              _RX9 00C6                                u875 0423  
                              u967 02FA                                u977 034F  
                              _TX9 04C6                                u987 0325  
                              u997 0333                                fsr0 0004  
                              indf 0000                       __CFG_FOSC$HS 0000  
                     __CFG_LVP$OFF 0000                    SendPacket@i_141 0028  
                  SendPacket@i_142 002A                               l1335 036D  
                             l1345 03A5                               l1337 037D  
                             l1349 03B2                               l1563 0347  
                             l1567 031B                               STR_1 04DE  
                             STR_2 04E5                               _BRGH 04C2  
                             _CREN 00C4                               _FERR 00C2  
                             u1007 0341                               _PEIE 005E  
                             _RCIE 0465                               _RCEN 048B  
                             _RCIF 0065                               i1l81 0530  
                             i1l74 0515                               i1l90 02E6  
                             i1l75 051A                               i1l92 02E1  
                             i1l94 02E7                               _OERR 00C1  
                             _SPEN 00C7                               _RSEN 0489  
                             _SREN 00C5                               _TXIE 0464  
                             _TXEN 04C5                               _TXIF 0064  
                             _SYNC 04C4                       __CFG_WRT$OFF 0000  
 __end_of_I2C_Master_RepeatedStart 0554                               _main 02F2  
                    ??_Init_SERIAL 00BE                               btemp 007E  
                    ??_Packetmaker 0072                        Init_I2C_M@c 00CC  
                             start 0012                      __CFG_IESO$OFF 0000  
                    __CFG_MCLRE$ON 0000   InterReceiver@EEPROMCmdDataLength 0054  
                 ?_I2C_Master_Read 0070                   ?_I2C_Master_Wait 0070  
       InterReceiver@EEPROMCmdData 0058                   ?_I2C_Master_Stop 0070  
                            ?_main 0070                              _ACKEN 048C  
                            _ACKDT 048D                      __CFG_WDTE$OFF 0000  
                            _ANSEL 0188                    __end_of___lldiv 03BB  
                            i1l190 04FA                              i1l264 051E  
                            _RCREG 001A                              _SPBRG 0099  
                            _PORTA 0005                              _PORTB 0006  
                            _PORTC 0007                              _PORTE 0009  
                            _TRISA 0085                              _TRISB 0086  
                            u81_25 0176                              _TRISC 0087  
                            _TRISE 0089                              u90_25 02B8  
                            u67_20 0465                              u59_25 0234  
                            u91_25 02DF                              u84_25 00A6  
                            _TXREG 0019                      __CFG_PWRTE$ON 0000  
                   __CFG_FCMEN$OFF 0000                    __end_of_flipout 04FE  
                            _eflag 005F                              _getch 050F  
                            _putch 052F                     __CFG_BOREN$OFF 0000  
                            pclath 000A                              status 0003  
                            wtemp0 007E             __size_of_InterReceiver 009D  
                       _Init_I2C_M 0413                         SendByte@bt 0078  
          EEPROM_Read@high_address 0073               __size_of_EEPROM_Read 00B0  
                  __initialization 0015                       __end_of_main 035B  
              __end_of_Init_SERIAL 04A4                   __end_of_Init_MPU 04BE  
              __end_of_Packetmaker 0255                             ??_main 00D4  
                 __end_of_SendByte 0413                  ?_I2C_Master_Start 0070  
                ?_I2C_Master_Write 0070              Packetmaker@eDataField 0074  
               ??_I2C_Master_Start 0070                         _SendPacket 004C  
                           ?_getch 0070                 ??_I2C_Master_Write 0072  
                           ?_putch 0070                             _ANSELH 0189  
                     Packetmaker@i 0079                             u101_27 028B  
                           u102_27 02C8                             i1l1233 01EB  
                           i1l1225 01DC                             i1l1323 0468  
                           i1l1219 01BE                             i1l1423 0169  
                           i1l1415 0156                             i1l1255 022E  
                           i1l1247 021C                             i1l1239 020A  
                           u103_27 0057                             i1l1425 0190  
                           i1l1417 0165                             i1l1257 024C  
                           i1l1249 022C                             i1l1275 03DA  
                           i1l1453 0087                             u104_27 00FD  
                           i1l1289 03FC                             i1l1465 00A0  
                           i1l1491 00F5                             i1l1467 00BB  
                           i1l1459 009C                             i1l1547 02BA  
                           i1l1485 00E0                             u105_27 03F2  
                           u106_27 0400                             u107_27 01AC  
                           _SSPADD 0093                             _STATUS 0003  
                           _SSPCON 0014                             _SSPBUF 0013  
         _I2C_Master_RepeatedStart 054D                          ??___lldiv 00C6  
                           _efcshi 0061                             _efcslo 0062  
                           _fcsbit 04BE                             _estuff 005B  
                    _InterReceiver 0255                          ??_flipout 0070  
                           saved_w 007E             EEPROM_Read@low_address 0074  
          __end_of__initialization 0048                        SendPacket@i 0026  
                      ?_Init_I2C_M 00CC                        _Init_SERIAL 0489  
               Packetmaker@Datanum 0077                        _Packetmaker 01B4  
                   __pcstackCOMMON 0070                       __pidataBANK0 0554  
                     __pidataBANK1 046B                      __end_of_getch 051E  
                    __end_of_putch 0537                     ?_InterReceiver 0070  
                      ?_SendPacket 0070                            ??_getch 0070  
                          ??_putch 0070                         __pbssBANK0 0059  
                       __pbssBANK1 00D7                         __pbssBANK3 0190  
                        ?_Init_MPU 0070                          ?_SendByte 0070  
                       __pmaintext 02F2                         _ebitstatus 0059  
                       __pintentry 0004                            ?_fcsbit 0070  
             SendPacket@eDataField 0025                __size_of_Init_I2C_M 0032  
                          _SSPCON2 0091                            _SSPSTAT 0094  
                       __stringtab 04D8                         ??_Init_MPU 00BE  
                       ??_SendByte 0073                            _ePacket 0190  
                          ___lldiv 035B                __size_of_SendPacket 00B8  
                  ??_InterReceiver 002C                    __size_of_fcsbit 001A  
                          __ptext1 0489                            __ptext2 04A4  
                          __ptext3 0413                            __ptext4 035B  
                          __ptext5 0255                            __ptext6 052F  
                          __ptext7 050F                            __ptext8 004C  
                          __ptext9 03BB                     InterReceiver@i 0056  
                          _flipout 04EC           __size_of_I2C_Master_Read 0026  
         __size_of_I2C_Master_Wait 0009           __size_of_I2C_Master_Stop 0007  
                          clrloop0 0528               end_of_initialization 0048  
                        _FMRX_Nref 0063                          _FMRX_Nprg 00A0  
       ??_I2C_Master_RepeatedStart 0070                          _FMTX_Nref 0067  
                        _FMTX_Nprg 00B4                      ??_EEPROM_Read 0077  
                        _CWTX_Nref 0065                          _CWTX_Nprg 00AA  
        __size_of_I2C_Master_Start 0007          __size_of_I2C_Master_Write 0008  
                  ___lldiv@divisor 00BE                    ___lldiv@counter 00CB  
                 I2C_Master_Read@a 0071                InterReceiver@RXDATA 0034  
                     SendByte@byte 0077                       ??_Init_I2C_M 00D0  
                     ?_Init_SERIAL 0070                       ?_Packetmaker 0070  
        EEPROM_Read@EEPROM_address 0020                __end_of_EEPROM_Read 01B4  
                   __end_of_fcsbit 04D8                start_initialization 0015  
                        SendByte@i 0075                 __end_of_Init_I2C_M 0445  
                     ??_SendPacket 0020                  ??_I2C_Master_Read 0070  
                ??_I2C_Master_Wait 0070                  ??_I2C_Master_Stop 0070  
                __size_of_Init_MPU 001A             EEPROM_Read@ReadAddress 0021  
                __size_of_SendByte 0058                         init_fetch0 04FE  
                         ??_fcsbit 0070                        __pdataBANK0 0063  
                      __pdataBANK1 00A0                 __end_of_SendPacket 0104  
                        ___latbits 0002                      __pcstackBANK0 0020  
                    __pcstackBANK1 00BE                        _EEPROM_Read 0104  
              SendPacket@Packetnum 0023                   _I2C_Master_Start 0546  
                 _I2C_Master_Write 0537                           ?___lldiv 00BE  
                        __pstrings 04D8                           ?_flipout 0070  
                   __size_of_getch 000F                     __size_of_putch 0008  
                interrupt_function 0004                          clear_ram0 0527  
             __size_of_Init_SERIAL 001B               __size_of_Packetmaker 00A1  
                     EEPROM_Read@i 0022              __end_of_InterReceiver 02F2  
                      __stringbase 04DD                I2C_Master_Read@temp 0072  
                         _Init_MPU 04A4                           _SendByte 03BB  
__size_of_I2C_Master_RepeatedStart 0007          ?_I2C_Master_RepeatedStart 0070  
                 __size_of___lldiv 0060                   Packetmaker@i_132 007B  
                 Packetmaker@i_135 0075                 __end_of__stringtab 04DE  
              EEPROM_Read@ReadData 0075                         _EEPROMData 00D7  
                  _I2C_Master_Read 0445                   __size_of_flipout 0012  
                  _I2C_Master_Wait 051E                    _I2C_Master_Stop 053F  
                         _efcsflag 005D                           __ptext10 04EC  
                         __ptext11 04BE                           __ptext12 01B4  
                         __ptext13 0104                           __ptext14 0537  
                         __ptext15 053F                           __ptext16 0546  
                         __ptext17 054D                           __ptext18 0445  
                         __ptext19 051E                  __CFG_BOR4V$BOR40V 0000  
                    __size_of_main 0069        EEPROM_Read@EEPROMDataLength 0076  
         __end_of_I2C_Master_Start 054D                          putch@byte 0070  
         __end_of_I2C_Master_Write 053F                 EEPROM_Read@Address 0024  
                         init_ram0 0502                           intlevel1 0000  
                     ?_EEPROM_Read 0073                   ___lldiv@dividend 00C2  
                        stringcode 04D8            __end_of_I2C_Master_Read 046B  
          __end_of_I2C_Master_Wait 0527            __end_of_I2C_Master_Stop 0546  
                      fcsbit@tbyte 0072                   ___lldiv@quotient 00C7  
                I2C_Master_Write@d 0070                           stringdir 04D8  
                         stringtab 04D8  
